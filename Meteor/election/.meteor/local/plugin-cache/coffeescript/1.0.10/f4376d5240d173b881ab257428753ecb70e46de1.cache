{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar debug;\n\nRouter.configure({\n  progress: true,\n  progressDebug: false,\n  progressDelay: false,\n  progressSpinner: true,\n  progressTick: true\n});\n\ndebug = function() {\n  if (Router.current().lookupOption('progressDebug')) {\n    return console.log.apply(console, arguments);\n  }\n};\n\nTemplate.__IronRouterProgress__.created = function() {\n  var self;\n  self = this;\n  this.ticker = false;\n  this.delay = false;\n  this.started = false;\n  this.loading = new ReactiveVar(false);\n  this.spinner = new ReactiveVar(false);\n  this.done = new ReactiveVar(false);\n  this.percent = new ReactiveVar(false);\n  this.functions = {\n    reset: function(element) {\n      debug('Reset');\n      self.functions.stop();\n      self.loading.set(false);\n      self.done.set(false);\n      self.percent.set(0);\n      self.started = false;\n      if (element) {\n        element.offsetWidth = element.offsetWidth;\n      }\n      return self;\n    },\n    start: function(element) {\n      var delay;\n      debug('Start');\n      self.functions.reset(element);\n      self.spinner.set(Router.current().lookupOption('progressSpinner') || false);\n      self.loading.set(true);\n      delay = Router.current().lookupOption('progressDelay');\n      if (delay > 0) {\n        debug('Delayed');\n        self.delay = Meteor.setTimeout(function() {\n          self.started = true;\n          self.functions.progress();\n          return self.functions.tick();\n        }, delay);\n      } else {\n        debug('Not delayed');\n        self.started = true;\n        self.functions.progress();\n        self.functions.tick();\n      }\n      return self;\n    },\n    progress: function(progress) {\n      var percent, percentNew;\n      if (progress == null) {\n        progress = false;\n      }\n      debug('Progress');\n      percent = self.percent.get();\n      percentNew = percent + (progress ? progress : (100 - percent) * (Math.random() * 0.45 + 0.05) | 0);\n      if (percentNew >= 100) {\n        self.functions.done();\n      } else {\n        self.percent.set(percentNew);\n        self.functions.tick();\n      }\n      return self;\n    },\n    tick: function() {\n      debug('Tick');\n      if (Router.current().lookupOption('progressTick')) {\n        debug('starting new ticker');\n        if (self.ticker) {\n          Meteor.clearTimeout(self.ticker);\n          self.ticker = false;\n        }\n        self.ticker = Meteor.setTimeout(function() {\n          self.ticker = false;\n          return self.functions.progress();\n        }, Math.random() * 750 + 750);\n      } else {\n        debug('Not starting ticker');\n      }\n      return self;\n    },\n    done: function() {\n      debug('Done');\n      self.functions.stop();\n      if (!self.started) {\n        self.functions.reset();\n      } else {\n        _.defer(function() {\n          return self.done.set(true);\n        });\n        self.loading.set(true);\n        self.percent.set(100);\n      }\n      return self;\n    },\n    stop: function() {\n      debug('Stop');\n      if (self.ticker) {\n        Meteor.clearTimeout(self.ticker);\n        self.ticker = false;\n      }\n      if (self.delay) {\n        Meteor.clearTimeout(self.delay);\n        self.delay = false;\n      }\n      return self;\n    }\n  };\n  Router.load(function() {\n    var element;\n    debug('IR:load');\n    element = self.find('*');\n    self.functions.start(element);\n    this.next();\n    return this;\n  });\n  Router.unload(function() {\n    debug('IR:unload');\n    self.functions.reset();\n    return this;\n  });\n  Router.onRun(function() {\n    debug('IR:run');\n    self.loading.set(true);\n    this.next();\n    return this;\n  });\n  Router.onRerun(function() {\n    debug('IR:re-run');\n    this.next();\n    return this;\n  });\n  Router.onBeforeAction(function() {\n    debug('IR:before');\n    if (this.ready()) {\n      self.functions.done();\n      self.functions.stop();\n    } else {\n      self.functions.progress();\n    }\n    this.next();\n    return this;\n  });\n  Router.onAfterAction(function() {\n    debug('IR:after');\n    return this;\n  });\n  return Router.onStop(function() {\n    debug('IR:stop');\n    self.functions.reset();\n    return this;\n  });\n};\n\nTemplate.__IronRouterProgress__.helpers({\n  data: function() {\n    return Template.instance();\n  },\n  template: function() {\n    var ref;\n    if (!((ref = Router.current()) != null ? ref.lookupOption('progress') : void 0)) {\n      return null;\n    }\n    if (Template.instance().loading.get()) {\n      return '__IronRouterProgressDefault__';\n    } else {\n      return null;\n    }\n  }\n});\n\nTemplate.__IronRouterProgressDefault__.rendered = function() {\n  return this.element = this.$('#iron-router-progress');\n};\n\nTemplate.__IronRouterProgressDefault__.helpers({\n  cssClass: function() {\n    var classes;\n    classes = [];\n    if (this.loading.get()) {\n      classes.push('loading');\n    }\n    if (this.spinner.get()) {\n      classes.push('spinner');\n    }\n    if (this.done.get()) {\n      classes.push('done');\n    }\n    return classes.join(' ');\n  },\n  cssStyle: function() {\n    var styles;\n    styles = [];\n    if (this.percent.get()) {\n      styles.push(\"width:\" + (this.percent.get()) + \"%\");\n    }\n    return styles.join(';');\n  }\n});\n\nTemplate.__IronRouterProgressDefault__.events({\n  'transitionend #iron-router-progress, webkitTransitionEnd #iron-router-progress, oTransitionEnd #iron-router-progress, otransitionend #iron-router-progress, MSTransitionEnd #iron-router-progress': function(e, template) {\n    var data;\n    if (e.originalEvent.pseudoElement === '' && e.originalEvent.propertyName === _.last(template.element.css('transition-property').split(', '))) {\n      debug('transitionend');\n      data = Template.currentData();\n      data.done.set(false);\n      data.loading.set(false);\n      return data.percent.set(false);\n    }\n  }\n});\n\nMeteor.startup(function() {\n  var layout;\n  layout = new Iron.Layout({\n    template: '__IronRouterProgress__'\n  });\n  return layout.insert({\n    el: document.body\n  });\n});\n","sourceMap":{"version":3,"file":"/progress.coffee.js","sourceRoot":"","sources":["/packages/multiply_iron-router-progress/progress.coffee"],"names":[],"mappings":"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","sourcesContent":["# Default progress options\nRouter.configure\n\tprogress        : true\n\tprogressDebug   : false\n\tprogressDelay   : false\n\tprogressSpinner : true\n\tprogressTick    : true\n\n# Used to debug the package, if progressDebug is true\ndebug = -> console.log.apply console, arguments if Router.current().lookupOption 'progressDebug'\n\nTemplate.__IronRouterProgress__.created = ->\n\tself = @\n\n\t@ticker  = false\n\t@delay   = false\n\t@started = false\n\t@loading = new ReactiveVar false\n\t@spinner = new ReactiveVar false\n\t@done    = new ReactiveVar false\n\t@percent = new ReactiveVar false\n\n\t@functions =\n\t\treset : (element) ->\n\t\t\tdebug 'Reset'\n\n\t\t\tself.functions.stop()\n\n\t\t\t# Reset our variables\n\t\t\tself.loading.set false\n\t\t\tself.done.set    false\n\t\t\tself.percent.set 0\n\t\t\tself.started =   false\n\n\t\t\telement.offsetWidth = element.offsetWidth if element\n\n\t\t\tself\n\n\t\tstart : (element) ->\n\t\t\tdebug 'Start'\n\n\t\t\t# Reset our progress\n\t\t\tself.functions.reset element\n\n\t\t\t# Update the spinner status, if it changed\n\t\t\tself.spinner.set Router.current().lookupOption('progressSpinner') or false\n\n\t\t\tself.loading.set true\n\n\t\t\t# If we have a delay, wait with the progress\n\t\t\tdelay = Router.current().lookupOption 'progressDelay'\n\t\t\tif delay > 0\n\t\t\t\tdebug 'Delayed'\n\t\t\t\tself.delay = Meteor.setTimeout ->\n\t\t\t\t\tself.started = true\n\t\t\t\t\tself.functions.progress()\n\t\t\t\t\tself.functions.tick()\n\t\t\t\t, delay\n\t\t\telse\n\t\t\t\tdebug 'Not delayed'\n\t\t\t\tself.started = true\n\t\t\t\tself.functions.progress()\n\t\t\t\tself.functions.tick()\n\n\t\t\tself\n\n\t\tprogress : (progress = false) ->\n\t\t\tdebug 'Progress'\n\n\t\t\t# XX We need a better random number generation here\n\t\t\tpercent    = self.percent.get()\n\t\t\tpercentNew = percent + if progress then progress else (100 - percent) * (Math.random() * 0.45 + 0.05) | 0\n\n\t\t\tif percentNew >= 100\n\t\t\t\tself.functions.done()\n\t\t\telse\n\t\t\t\tself.percent.set percentNew\n\t\t\t\tself.functions.tick()\n\n\t\t\tself\n\n\t\ttick : ->\n\t\t\tdebug 'Tick'\n\n\t\t\tif Router.current().lookupOption 'progressTick'\n\t\t\t\tdebug 'starting new ticker'\n\t\t\t\tif self.ticker\n\t\t\t\t\tMeteor.clearTimeout self.ticker\n\t\t\t\t\tself.ticker = false\n\n\t\t\t\tself.ticker = Meteor.setTimeout ->\n\t\t\t\t\tself.ticker = false\n\t\t\t\t\tself.functions.progress()\n\t\t\t\t, Math.random() * 750 + 750\n\t\t\telse\n\t\t\t\tdebug 'Not starting ticker'\n\n\t\t\tself\n\n\t\tdone : ->\n\t\t\tdebug 'Done'\n\n\t\t\tself.functions.stop()\n\n\t\t\tif not self.started\n\t\t\t\tself.functions.reset()\n\t\t\telse\n\t\t\t\t_.defer ->\n\t\t\t\t\tself.done.set true\n\t\t\t\tself.loading.set true\n\t\t\t\tself.percent.set 100\n\t\t\tself\n\n\t\tstop : ->\n\t\t\tdebug 'Stop'\n\n\t\t\t# Clear the timers, if we have any\n\t\t\tif self.ticker\n\t\t\t\tMeteor.clearTimeout self.ticker\n\t\t\t\tself.ticker = false\n\t\t\tif self.delay\n\t\t\t\tMeteor.clearTimeout self.delay\n\t\t\t\tself.delay = false\n\n\t\t\tself\n\n\tRouter.load ->\n\t\tdebug 'IR:load'\n\t\telement = self.find '*'\n\t\tself.functions.start element\n\n\t\t@next()\n\t\t@\n\n\tRouter.unload ->\n\t\tdebug 'IR:unload'\n\t\tself.functions.reset()\n\t\t@\n\n\tRouter.onRun ->\n\t\tdebug 'IR:run'\n\t\tself.loading.set true\n\t\t@next()\n\t\t@\n\n\tRouter.onRerun ->\n\t\tdebug 'IR:re-run'\n\t\t@next()\n\t\t@\n\n\tRouter.onBeforeAction ->\n\t\tdebug 'IR:before'\n\t\tif @ready()\n\t\t\tself.functions.done()\n\t\t\tself.functions.stop()\n\t\telse\n\t\t\tself.functions.progress()\n\t\t@next()\n\t\t@\n\n\tRouter.onAfterAction ->\n\t\tdebug 'IR:after'\n\t\t@\n\n\tRouter.onStop ->\n\t\tdebug 'IR:stop'\n\t\tself.functions.reset()\n\t\t@\n\nTemplate.__IronRouterProgress__.helpers\n\tdata     : -> Template.instance()\n\ttemplate : ->\n\t\t# If progress is disabled in general, don't show a template\n\t\treturn null if not Router.current()?.lookupOption 'progress'\n\n\t\tif Template.instance().loading.get() then '__IronRouterProgressDefault__' else null\n\nTemplate.__IronRouterProgressDefault__.rendered = ->\n\t# Used for the CSS reset\n\t@element = @$ '#iron-router-progress'\n\nTemplate.__IronRouterProgressDefault__.helpers\n\tcssClass : ->\n\t\tclasses = []\n\n\t\tclasses.push 'loading' if @loading.get()\n\t\tclasses.push 'spinner' if @spinner.get()\n\t\tclasses.push 'done'    if @done.get()\n\n\t\tclasses.join ' '\n\tcssStyle : ->\n\t\tstyles = []\n\t\t\n\t\tstyles.push \"width:#{@percent.get()}%\" if @percent.get()\n\n\t\tstyles.join ';'\n\nTemplate.__IronRouterProgressDefault__.events\n\t'transitionend #iron-router-progress, webkitTransitionEnd #iron-router-progress, oTransitionEnd #iron-router-progress, otransitionend #iron-router-progress, MSTransitionEnd #iron-router-progress' : (e, template) ->\n\t\t# Only reset, if this is the last transition, and that it's not a psuedo selector, such as `:before` and `:after`\n\t\t# Due to the open nature, of the CSS, I want people to be able to do whatever they like, and as such\n\t\t# simply expecting opacity to reach zero, or specific propertyName to execute won't suffice\n\t\t# A more elegant solution should be added, as not all browsers may support transition-property\n\t\t# witout their vendor prefixes\n\n\t\tif e.originalEvent.pseudoElement is '' and e.originalEvent.propertyName is _.last template.element.css('transition-property').split ', '\n\t\t\tdebug 'transitionend'\n\t\t\tdata = Template.currentData()\n\t\t\tdata.done.set    false\n\t\t\tdata.loading.set false\n\t\t\tdata.percent.set false\n\n# Prepare our DOM-element\nMeteor.startup ->\n\tlayout = new Iron.Layout\n\t\ttemplate : '__IronRouterProgress__'\n\tlayout.insert\n\t\tel : document.body\n"]}}