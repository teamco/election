{"version":3,"sources":["meteor://ðŸ’»app/packages/mrt_bootstrap-3/packages/mrt_bootstrap-3.js"],"names":[],"mappingsfile":"/packages/mrt_bootstrap-3.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/mrt:bootstrap-3/bootstrap-3/js/bootstrap.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*!                                                                                                                   // 1\n * Bootstrap v3.1.0 (http://getbootstrap.com)                                                                         // 2\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 3\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 4\n */                                                                                                                   // 5\n                                                                                                                      // 6\nif (typeof jQuery === 'undefined') { throw new Error('Bootstrap requires jQuery') }                                   // 7\n                                                                                                                      // 8\n/* ========================================================================                                           // 9\n * Bootstrap: transition.js v3.1.0                                                                                    // 10\n * http://getbootstrap.com/javascript/#transitions                                                                    // 11\n * ========================================================================                                           // 12\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 13\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 14\n * ======================================================================== */                                        // 15\n                                                                                                                      // 16\n                                                                                                                      // 17\n+function ($) {                                                                                                       // 18\n  'use strict';                                                                                                       // 19\n                                                                                                                      // 20\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)                                                     // 21\n  // ============================================================                                                     // 22\n                                                                                                                      // 23\n  function transitionEnd() {                                                                                          // 24\n    var el = document.createElement('bootstrap')                                                                      // 25\n                                                                                                                      // 26\n    var transEndEventNames = {                                                                                        // 27\n      'WebkitTransition' : 'webkitTransitionEnd',                                                                     // 28\n      'MozTransition'    : 'transitionend',                                                                           // 29\n      'OTransition'      : 'oTransitionEnd otransitionend',                                                           // 30\n      'transition'       : 'transitionend'                                                                            // 31\n    }                                                                                                                 // 32\n                                                                                                                      // 33\n    for (var name in transEndEventNames) {                                                                            // 34\n      if (el.style[name] !== undefined) {                                                                             // 35\n        return { end: transEndEventNames[name] }                                                                      // 36\n      }                                                                                                               // 37\n    }                                                                                                                 // 38\n                                                                                                                      // 39\n    return false // explicit for ie8 (  ._.)                                                                          // 40\n  }                                                                                                                   // 41\n                                                                                                                      // 42\n  // http://blog.alexmaccaw.com/css-transitions                                                                       // 43\n  $.fn.emulateTransitionEnd = function (duration) {                                                                   // 44\n    var called = false, $el = this                                                                                    // 45\n    $(this).one($.support.transition.end, function () { called = true })                                              // 46\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }                              // 47\n    setTimeout(callback, duration)                                                                                    // 48\n    return this                                                                                                       // 49\n  }                                                                                                                   // 50\n                                                                                                                      // 51\n  $(function () {                                                                                                     // 52\n    $.support.transition = transitionEnd()                                                                            // 53\n  })                                                                                                                  // 54\n                                                                                                                      // 55\n}(jQuery);                                                                                                            // 56\n                                                                                                                      // 57\n/* ========================================================================                                           // 58\n * Bootstrap: alert.js v3.1.0                                                                                         // 59\n * http://getbootstrap.com/javascript/#alerts                                                                         // 60\n * ========================================================================                                           // 61\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 62\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 63\n * ======================================================================== */                                        // 64\n                                                                                                                      // 65\n                                                                                                                      // 66\n+function ($) {                                                                                                       // 67\n  'use strict';                                                                                                       // 68\n                                                                                                                      // 69\n  // ALERT CLASS DEFINITION                                                                                           // 70\n  // ======================                                                                                           // 71\n                                                                                                                      // 72\n  var dismiss = '[data-dismiss=\"alert\"]'                                                                              // 73\n  var Alert   = function (el) {                                                                                       // 74\n    $(el).on('click', dismiss, this.close)                                                                            // 75\n  }                                                                                                                   // 76\n                                                                                                                      // 77\n  Alert.prototype.close = function (e) {                                                                              // 78\n    var $this    = $(this)                                                                                            // 79\n    var selector = $this.attr('data-target')                                                                          // 80\n                                                                                                                      // 81\n    if (!selector) {                                                                                                  // 82\n      selector = $this.attr('href')                                                                                   // 83\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7                                  // 84\n    }                                                                                                                 // 85\n                                                                                                                      // 86\n    var $parent = $(selector)                                                                                         // 87\n                                                                                                                      // 88\n    if (e) e.preventDefault()                                                                                         // 89\n                                                                                                                      // 90\n    if (!$parent.length) {                                                                                            // 91\n      $parent = $this.hasClass('alert') ? $this : $this.parent()                                                      // 92\n    }                                                                                                                 // 93\n                                                                                                                      // 94\n    $parent.trigger(e = $.Event('close.bs.alert'))                                                                    // 95\n                                                                                                                      // 96\n    if (e.isDefaultPrevented()) return                                                                                // 97\n                                                                                                                      // 98\n    $parent.removeClass('in')                                                                                         // 99\n                                                                                                                      // 100\n    function removeElement() {                                                                                        // 101\n      $parent.trigger('closed.bs.alert').remove()                                                                     // 102\n    }                                                                                                                 // 103\n                                                                                                                      // 104\n    $.support.transition && $parent.hasClass('fade') ?                                                                // 105\n      $parent                                                                                                         // 106\n        .one($.support.transition.end, removeElement)                                                                 // 107\n        .emulateTransitionEnd(150) :                                                                                  // 108\n      removeElement()                                                                                                 // 109\n  }                                                                                                                   // 110\n                                                                                                                      // 111\n                                                                                                                      // 112\n  // ALERT PLUGIN DEFINITION                                                                                          // 113\n  // =======================                                                                                          // 114\n                                                                                                                      // 115\n  var old = $.fn.alert                                                                                                // 116\n                                                                                                                      // 117\n  $.fn.alert = function (option) {                                                                                    // 118\n    return this.each(function () {                                                                                    // 119\n      var $this = $(this)                                                                                             // 120\n      var data  = $this.data('bs.alert')                                                                              // 121\n                                                                                                                      // 122\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))                                                     // 123\n      if (typeof option == 'string') data[option].call($this)                                                         // 124\n    })                                                                                                                // 125\n  }                                                                                                                   // 126\n                                                                                                                      // 127\n  $.fn.alert.Constructor = Alert                                                                                      // 128\n                                                                                                                      // 129\n                                                                                                                      // 130\n  // ALERT NO CONFLICT                                                                                                // 131\n  // =================                                                                                                // 132\n                                                                                                                      // 133\n  $.fn.alert.noConflict = function () {                                                                               // 134\n    $.fn.alert = old                                                                                                  // 135\n    return this                                                                                                       // 136\n  }                                                                                                                   // 137\n                                                                                                                      // 138\n                                                                                                                      // 139\n  // ALERT DATA-API                                                                                                   // 140\n  // ==============                                                                                                   // 141\n                                                                                                                      // 142\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)                                           // 143\n                                                                                                                      // 144\n}(jQuery);                                                                                                            // 145\n                                                                                                                      // 146\n/* ========================================================================                                           // 147\n * Bootstrap: button.js v3.1.0                                                                                        // 148\n * http://getbootstrap.com/javascript/#buttons                                                                        // 149\n * ========================================================================                                           // 150\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 151\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 152\n * ======================================================================== */                                        // 153\n                                                                                                                      // 154\n                                                                                                                      // 155\n+function ($) {                                                                                                       // 156\n  'use strict';                                                                                                       // 157\n                                                                                                                      // 158\n  // BUTTON PUBLIC CLASS DEFINITION                                                                                   // 159\n  // ==============================                                                                                   // 160\n                                                                                                                      // 161\n  var Button = function (element, options) {                                                                          // 162\n    this.$element  = $(element)                                                                                       // 163\n    this.options   = $.extend({}, Button.DEFAULTS, options)                                                           // 164\n    this.isLoading = false                                                                                            // 165\n  }                                                                                                                   // 166\n                                                                                                                      // 167\n  Button.DEFAULTS = {                                                                                                 // 168\n    loadingText: 'loading...'                                                                                         // 169\n  }                                                                                                                   // 170\n                                                                                                                      // 171\n  Button.prototype.setState = function (state) {                                                                      // 172\n    var d    = 'disabled'                                                                                             // 173\n    var $el  = this.$element                                                                                          // 174\n    var val  = $el.is('input') ? 'val' : 'html'                                                                       // 175\n    var data = $el.data()                                                                                             // 176\n                                                                                                                      // 177\n    state = state + 'Text'                                                                                            // 178\n                                                                                                                      // 179\n    if (!data.resetText) $el.data('resetText', $el[val]())                                                            // 180\n                                                                                                                      // 181\n    $el[val](data[state] || this.options[state])                                                                      // 182\n                                                                                                                      // 183\n    // push to event loop to allow forms to submit                                                                    // 184\n    setTimeout($.proxy(function () {                                                                                  // 185\n      if (state == 'loadingText') {                                                                                   // 186\n        this.isLoading = true                                                                                         // 187\n        $el.addClass(d).attr(d, d)                                                                                    // 188\n      } else if (this.isLoading) {                                                                                    // 189\n        this.isLoading = false                                                                                        // 190\n        $el.removeClass(d).removeAttr(d)                                                                              // 191\n      }                                                                                                               // 192\n    }, this), 0)                                                                                                      // 193\n  }                                                                                                                   // 194\n                                                                                                                      // 195\n  Button.prototype.toggle = function () {                                                                             // 196\n    var changed = true                                                                                                // 197\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')                                                    // 198\n                                                                                                                      // 199\n    if ($parent.length) {                                                                                             // 200\n      var $input = this.$element.find('input')                                                                        // 201\n      if ($input.prop('type') == 'radio') {                                                                           // 202\n        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false                               // 203\n        else $parent.find('.active').removeClass('active')                                                            // 204\n      }                                                                                                               // 205\n      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')                        // 206\n    }                                                                                                                 // 207\n                                                                                                                      // 208\n    if (changed) this.$element.toggleClass('active')                                                                  // 209\n  }                                                                                                                   // 210\n                                                                                                                      // 211\n                                                                                                                      // 212\n  // BUTTON PLUGIN DEFINITION                                                                                         // 213\n  // ========================                                                                                         // 214\n                                                                                                                      // 215\n  var old = $.fn.button                                                                                               // 216\n                                                                                                                      // 217\n  $.fn.button = function (option) {                                                                                   // 218\n    return this.each(function () {                                                                                    // 219\n      var $this   = $(this)                                                                                           // 220\n      var data    = $this.data('bs.button')                                                                           // 221\n      var options = typeof option == 'object' && option                                                               // 222\n                                                                                                                      // 223\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))                                          // 224\n                                                                                                                      // 225\n      if (option == 'toggle') data.toggle()                                                                           // 226\n      else if (option) data.setState(option)                                                                          // 227\n    })                                                                                                                // 228\n  }                                                                                                                   // 229\n                                                                                                                      // 230\n  $.fn.button.Constructor = Button                                                                                    // 231\n                                                                                                                      // 232\n                                                                                                                      // 233\n  // BUTTON NO CONFLICT                                                                                               // 234\n  // ==================                                                                                               // 235\n                                                                                                                      // 236\n  $.fn.button.noConflict = function () {                                                                              // 237\n    $.fn.button = old                                                                                                 // 238\n    return this                                                                                                       // 239\n  }                                                                                                                   // 240\n                                                                                                                      // 241\n                                                                                                                      // 242\n  // BUTTON DATA-API                                                                                                  // 243\n  // ===============                                                                                                  // 244\n                                                                                                                      // 245\n  $(document).on('click.bs.button.data-api', '[data-toggle^=button]', function (e) {                                  // 246\n    var $btn = $(e.target)                                                                                            // 247\n    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')                                                            // 248\n    $btn.button('toggle')                                                                                             // 249\n    e.preventDefault()                                                                                                // 250\n  })                                                                                                                  // 251\n                                                                                                                      // 252\n}(jQuery);                                                                                                            // 253\n                                                                                                                      // 254\n/* ========================================================================                                           // 255\n * Bootstrap: carousel.js v3.1.0                                                                                      // 256\n * http://getbootstrap.com/javascript/#carousel                                                                       // 257\n * ========================================================================                                           // 258\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 259\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 260\n * ======================================================================== */                                        // 261\n                                                                                                                      // 262\n                                                                                                                      // 263\n+function ($) {                                                                                                       // 264\n  'use strict';                                                                                                       // 265\n                                                                                                                      // 266\n  // CAROUSEL CLASS DEFINITION                                                                                        // 267\n  // =========================                                                                                        // 268\n                                                                                                                      // 269\n  var Carousel = function (element, options) {                                                                        // 270\n    this.$element    = $(element)                                                                                     // 271\n    this.$indicators = this.$element.find('.carousel-indicators')                                                     // 272\n    this.options     = options                                                                                        // 273\n    this.paused      =                                                                                                // 274\n    this.sliding     =                                                                                                // 275\n    this.interval    =                                                                                                // 276\n    this.$active     =                                                                                                // 277\n    this.$items      = null                                                                                           // 278\n                                                                                                                      // 279\n    this.options.pause == 'hover' && this.$element                                                                    // 280\n      .on('mouseenter', $.proxy(this.pause, this))                                                                    // 281\n      .on('mouseleave', $.proxy(this.cycle, this))                                                                    // 282\n  }                                                                                                                   // 283\n                                                                                                                      // 284\n  Carousel.DEFAULTS = {                                                                                               // 285\n    interval: 5000,                                                                                                   // 286\n    pause: 'hover',                                                                                                   // 287\n    wrap: true                                                                                                        // 288\n  }                                                                                                                   // 289\n                                                                                                                      // 290\n  Carousel.prototype.cycle =  function (e) {                                                                          // 291\n    e || (this.paused = false)                                                                                        // 292\n                                                                                                                      // 293\n    this.interval && clearInterval(this.interval)                                                                     // 294\n                                                                                                                      // 295\n    this.options.interval                                                                                             // 296\n      && !this.paused                                                                                                 // 297\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))                               // 298\n                                                                                                                      // 299\n    return this                                                                                                       // 300\n  }                                                                                                                   // 301\n                                                                                                                      // 302\n  Carousel.prototype.getActiveIndex = function () {                                                                   // 303\n    this.$active = this.$element.find('.item.active')                                                                 // 304\n    this.$items  = this.$active.parent().children()                                                                   // 305\n                                                                                                                      // 306\n    return this.$items.index(this.$active)                                                                            // 307\n  }                                                                                                                   // 308\n                                                                                                                      // 309\n  Carousel.prototype.to = function (pos) {                                                                            // 310\n    var that        = this                                                                                            // 311\n    var activeIndex = this.getActiveIndex()                                                                           // 312\n                                                                                                                      // 313\n    if (pos > (this.$items.length - 1) || pos < 0) return                                                             // 314\n                                                                                                                      // 315\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) })                // 316\n    if (activeIndex == pos) return this.pause().cycle()                                                               // 317\n                                                                                                                      // 318\n    return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))                                       // 319\n  }                                                                                                                   // 320\n                                                                                                                      // 321\n  Carousel.prototype.pause = function (e) {                                                                           // 322\n    e || (this.paused = true)                                                                                         // 323\n                                                                                                                      // 324\n    if (this.$element.find('.next, .prev').length && $.support.transition) {                                          // 325\n      this.$element.trigger($.support.transition.end)                                                                 // 326\n      this.cycle(true)                                                                                                // 327\n    }                                                                                                                 // 328\n                                                                                                                      // 329\n    this.interval = clearInterval(this.interval)                                                                      // 330\n                                                                                                                      // 331\n    return this                                                                                                       // 332\n  }                                                                                                                   // 333\n                                                                                                                      // 334\n  Carousel.prototype.next = function () {                                                                             // 335\n    if (this.sliding) return                                                                                          // 336\n    return this.slide('next')                                                                                         // 337\n  }                                                                                                                   // 338\n                                                                                                                      // 339\n  Carousel.prototype.prev = function () {                                                                             // 340\n    if (this.sliding) return                                                                                          // 341\n    return this.slide('prev')                                                                                         // 342\n  }                                                                                                                   // 343\n                                                                                                                      // 344\n  Carousel.prototype.slide = function (type, next) {                                                                  // 345\n    var $active   = this.$element.find('.item.active')                                                                // 346\n    var $next     = next || $active[type]()                                                                           // 347\n    var isCycling = this.interval                                                                                     // 348\n    var direction = type == 'next' ? 'left' : 'right'                                                                 // 349\n    var fallback  = type == 'next' ? 'first' : 'last'                                                                 // 350\n    var that      = this                                                                                              // 351\n                                                                                                                      // 352\n    if (!$next.length) {                                                                                              // 353\n      if (!this.options.wrap) return                                                                                  // 354\n      $next = this.$element.find('.item')[fallback]()                                                                 // 355\n    }                                                                                                                 // 356\n                                                                                                                      // 357\n    if ($next.hasClass('active')) return this.sliding = false                                                         // 358\n                                                                                                                      // 359\n    var e = $.Event('slide.bs.carousel', { relatedTarget: $next[0], direction: direction })                           // 360\n    this.$element.trigger(e)                                                                                          // 361\n    if (e.isDefaultPrevented()) return                                                                                // 362\n                                                                                                                      // 363\n    this.sliding = true                                                                                               // 364\n                                                                                                                      // 365\n    isCycling && this.pause()                                                                                         // 366\n                                                                                                                      // 367\n    if (this.$indicators.length) {                                                                                    // 368\n      this.$indicators.find('.active').removeClass('active')                                                          // 369\n      this.$element.one('slid.bs.carousel', function () {                                                             // 370\n        var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])                                    // 371\n        $nextIndicator && $nextIndicator.addClass('active')                                                           // 372\n      })                                                                                                              // 373\n    }                                                                                                                 // 374\n                                                                                                                      // 375\n    if ($.support.transition && this.$element.hasClass('slide')) {                                                    // 376\n      $next.addClass(type)                                                                                            // 377\n      $next[0].offsetWidth // force reflow                                                                            // 378\n      $active.addClass(direction)                                                                                     // 379\n      $next.addClass(direction)                                                                                       // 380\n      $active                                                                                                         // 381\n        .one($.support.transition.end, function () {                                                                  // 382\n          $next.removeClass([type, direction].join(' ')).addClass('active')                                           // 383\n          $active.removeClass(['active', direction].join(' '))                                                        // 384\n          that.sliding = false                                                                                        // 385\n          setTimeout(function () { that.$element.trigger('slid.bs.carousel') }, 0)                                    // 386\n        })                                                                                                            // 387\n        .emulateTransitionEnd($active.css('transition-duration').slice(0, -1) * 1000)                                 // 388\n    } else {                                                                                                          // 389\n      $active.removeClass('active')                                                                                   // 390\n      $next.addClass('active')                                                                                        // 391\n      this.sliding = false                                                                                            // 392\n      this.$element.trigger('slid.bs.carousel')                                                                       // 393\n    }                                                                                                                 // 394\n                                                                                                                      // 395\n    isCycling && this.cycle()                                                                                         // 396\n                                                                                                                      // 397\n    return this                                                                                                       // 398\n  }                                                                                                                   // 399\n                                                                                                                      // 400\n                                                                                                                      // 401\n  // CAROUSEL PLUGIN DEFINITION                                                                                       // 402\n  // ==========================                                                                                       // 403\n                                                                                                                      // 404\n  var old = $.fn.carousel                                                                                             // 405\n                                                                                                                      // 406\n  $.fn.carousel = function (option) {                                                                                 // 407\n    return this.each(function () {                                                                                    // 408\n      var $this   = $(this)                                                                                           // 409\n      var data    = $this.data('bs.carousel')                                                                         // 410\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)                // 411\n      var action  = typeof option == 'string' ? option : options.slide                                                // 412\n                                                                                                                      // 413\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))                                      // 414\n      if (typeof option == 'number') data.to(option)                                                                  // 415\n      else if (action) data[action]()                                                                                 // 416\n      else if (options.interval) data.pause().cycle()                                                                 // 417\n    })                                                                                                                // 418\n  }                                                                                                                   // 419\n                                                                                                                      // 420\n  $.fn.carousel.Constructor = Carousel                                                                                // 421\n                                                                                                                      // 422\n                                                                                                                      // 423\n  // CAROUSEL NO CONFLICT                                                                                             // 424\n  // ====================                                                                                             // 425\n                                                                                                                      // 426\n  $.fn.carousel.noConflict = function () {                                                                            // 427\n    $.fn.carousel = old                                                                                               // 428\n    return this                                                                                                       // 429\n  }                                                                                                                   // 430\n                                                                                                                      // 431\n                                                                                                                      // 432\n  // CAROUSEL DATA-API                                                                                                // 433\n  // =================                                                                                                // 434\n                                                                                                                      // 435\n  $(document).on('click.bs.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {                        // 436\n    var $this   = $(this), href                                                                                       // 437\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) //strip for ie7\n    var options = $.extend({}, $target.data(), $this.data())                                                          // 439\n    var slideIndex = $this.attr('data-slide-to')                                                                      // 440\n    if (slideIndex) options.interval = false                                                                          // 441\n                                                                                                                      // 442\n    $target.carousel(options)                                                                                         // 443\n                                                                                                                      // 444\n    if (slideIndex = $this.attr('data-slide-to')) {                                                                   // 445\n      $target.data('bs.carousel').to(slideIndex)                                                                      // 446\n    }                                                                                                                 // 447\n                                                                                                                      // 448\n    e.preventDefault()                                                                                                // 449\n  })                                                                                                                  // 450\n                                                                                                                      // 451\n  $(window).on('load', function () {                                                                                  // 452\n    $('[data-ride=\"carousel\"]').each(function () {                                                                    // 453\n      var $carousel = $(this)                                                                                         // 454\n      $carousel.carousel($carousel.data())                                                                            // 455\n    })                                                                                                                // 456\n  })                                                                                                                  // 457\n                                                                                                                      // 458\n}(jQuery);                                                                                                            // 459\n                                                                                                                      // 460\n/* ========================================================================                                           // 461\n * Bootstrap: collapse.js v3.1.0                                                                                      // 462\n * http://getbootstrap.com/javascript/#collapse                                                                       // 463\n * ========================================================================                                           // 464\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 465\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 466\n * ======================================================================== */                                        // 467\n                                                                                                                      // 468\n                                                                                                                      // 469\n+function ($) {                                                                                                       // 470\n  'use strict';                                                                                                       // 471\n                                                                                                                      // 472\n  // COLLAPSE PUBLIC CLASS DEFINITION                                                                                 // 473\n  // ================================                                                                                 // 474\n                                                                                                                      // 475\n  var Collapse = function (element, options) {                                                                        // 476\n    this.$element      = $(element)                                                                                   // 477\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)                                                     // 478\n    this.transitioning = null                                                                                         // 479\n                                                                                                                      // 480\n    if (this.options.parent) this.$parent = $(this.options.parent)                                                    // 481\n    if (this.options.toggle) this.toggle()                                                                            // 482\n  }                                                                                                                   // 483\n                                                                                                                      // 484\n  Collapse.DEFAULTS = {                                                                                               // 485\n    toggle: true                                                                                                      // 486\n  }                                                                                                                   // 487\n                                                                                                                      // 488\n  Collapse.prototype.dimension = function () {                                                                        // 489\n    var hasWidth = this.$element.hasClass('width')                                                                    // 490\n    return hasWidth ? 'width' : 'height'                                                                              // 491\n  }                                                                                                                   // 492\n                                                                                                                      // 493\n  Collapse.prototype.show = function () {                                                                             // 494\n    if (this.transitioning || this.$element.hasClass('in')) return                                                    // 495\n                                                                                                                      // 496\n    var startEvent = $.Event('show.bs.collapse')                                                                      // 497\n    this.$element.trigger(startEvent)                                                                                 // 498\n    if (startEvent.isDefaultPrevented()) return                                                                       // 499\n                                                                                                                      // 500\n    var actives = this.$parent && this.$parent.find('> .panel > .in')                                                 // 501\n                                                                                                                      // 502\n    if (actives && actives.length) {                                                                                  // 503\n      var hasData = actives.data('bs.collapse')                                                                       // 504\n      if (hasData && hasData.transitioning) return                                                                    // 505\n      actives.collapse('hide')                                                                                        // 506\n      hasData || actives.data('bs.collapse', null)                                                                    // 507\n    }                                                                                                                 // 508\n                                                                                                                      // 509\n    var dimension = this.dimension()                                                                                  // 510\n                                                                                                                      // 511\n    this.$element                                                                                                     // 512\n      .removeClass('collapse')                                                                                        // 513\n      .addClass('collapsing')                                                                                         // 514\n      [dimension](0)                                                                                                  // 515\n                                                                                                                      // 516\n    this.transitioning = 1                                                                                            // 517\n                                                                                                                      // 518\n    var complete = function () {                                                                                      // 519\n      this.$element                                                                                                   // 520\n        .removeClass('collapsing')                                                                                    // 521\n        .addClass('collapse in')                                                                                      // 522\n        [dimension]('auto')                                                                                           // 523\n      this.transitioning = 0                                                                                          // 524\n      this.$element.trigger('shown.bs.collapse')                                                                      // 525\n    }                                                                                                                 // 526\n                                                                                                                      // 527\n    if (!$.support.transition) return complete.call(this)                                                             // 528\n                                                                                                                      // 529\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))                                                     // 530\n                                                                                                                      // 531\n    this.$element                                                                                                     // 532\n      .one($.support.transition.end, $.proxy(complete, this))                                                         // 533\n      .emulateTransitionEnd(350)                                                                                      // 534\n      [dimension](this.$element[0][scrollSize])                                                                       // 535\n  }                                                                                                                   // 536\n                                                                                                                      // 537\n  Collapse.prototype.hide = function () {                                                                             // 538\n    if (this.transitioning || !this.$element.hasClass('in')) return                                                   // 539\n                                                                                                                      // 540\n    var startEvent = $.Event('hide.bs.collapse')                                                                      // 541\n    this.$element.trigger(startEvent)                                                                                 // 542\n    if (startEvent.isDefaultPrevented()) return                                                                       // 543\n                                                                                                                      // 544\n    var dimension = this.dimension()                                                                                  // 545\n                                                                                                                      // 546\n    this.$element                                                                                                     // 547\n      [dimension](this.$element[dimension]())                                                                         // 548\n      [0].offsetHeight                                                                                                // 549\n                                                                                                                      // 550\n    this.$element                                                                                                     // 551\n      .addClass('collapsing')                                                                                         // 552\n      .removeClass('collapse')                                                                                        // 553\n      .removeClass('in')                                                                                              // 554\n                                                                                                                      // 555\n    this.transitioning = 1                                                                                            // 556\n                                                                                                                      // 557\n    var complete = function () {                                                                                      // 558\n      this.transitioning = 0                                                                                          // 559\n      this.$element                                                                                                   // 560\n        .trigger('hidden.bs.collapse')                                                                                // 561\n        .removeClass('collapsing')                                                                                    // 562\n        .addClass('collapse')                                                                                         // 563\n    }                                                                                                                 // 564\n                                                                                                                      // 565\n    if (!$.support.transition) return complete.call(this)                                                             // 566\n                                                                                                                      // 567\n    this.$element                                                                                                     // 568\n      [dimension](0)                                                                                                  // 569\n      .one($.support.transition.end, $.proxy(complete, this))                                                         // 570\n      .emulateTransitionEnd(350)                                                                                      // 571\n  }                                                                                                                   // 572\n                                                                                                                      // 573\n  Collapse.prototype.toggle = function () {                                                                           // 574\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()                                                            // 575\n  }                                                                                                                   // 576\n                                                                                                                      // 577\n                                                                                                                      // 578\n  // COLLAPSE PLUGIN DEFINITION                                                                                       // 579\n  // ==========================                                                                                       // 580\n                                                                                                                      // 581\n  var old = $.fn.collapse                                                                                             // 582\n                                                                                                                      // 583\n  $.fn.collapse = function (option) {                                                                                 // 584\n    return this.each(function () {                                                                                    // 585\n      var $this   = $(this)                                                                                           // 586\n      var data    = $this.data('bs.collapse')                                                                         // 587\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)                // 588\n                                                                                                                      // 589\n      if (!data && options.toggle && option == 'show') option = !option                                               // 590\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))                                      // 591\n      if (typeof option == 'string') data[option]()                                                                   // 592\n    })                                                                                                                // 593\n  }                                                                                                                   // 594\n                                                                                                                      // 595\n  $.fn.collapse.Constructor = Collapse                                                                                // 596\n                                                                                                                      // 597\n                                                                                                                      // 598\n  // COLLAPSE NO CONFLICT                                                                                             // 599\n  // ====================                                                                                             // 600\n                                                                                                                      // 601\n  $.fn.collapse.noConflict = function () {                                                                            // 602\n    $.fn.collapse = old                                                                                               // 603\n    return this                                                                                                       // 604\n  }                                                                                                                   // 605\n                                                                                                                      // 606\n                                                                                                                      // 607\n  // COLLAPSE DATA-API                                                                                                // 608\n  // =================                                                                                                // 609\n                                                                                                                      // 610\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=collapse]', function (e) {                               // 611\n    var $this   = $(this), href                                                                                       // 612\n    var target  = $this.attr('data-target')                                                                           // 613\n        || e.preventDefault()                                                                                         // 614\n        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') //strip for ie7                          // 615\n    var $target = $(target)                                                                                           // 616\n    var data    = $target.data('bs.collapse')                                                                         // 617\n    var option  = data ? 'toggle' : $this.data()                                                                      // 618\n    var parent  = $this.attr('data-parent')                                                                           // 619\n    var $parent = parent && $(parent)                                                                                 // 620\n                                                                                                                      // 621\n    if (!data || !data.transitioning) {                                                                               // 622\n      if ($parent) $parent.find('[data-toggle=collapse][data-parent=\"' + parent + '\"]').not($this).addClass('collapsed')\n      $this[$target.hasClass('in') ? 'addClass' : 'removeClass']('collapsed')                                         // 624\n    }                                                                                                                 // 625\n                                                                                                                      // 626\n    $target.collapse(option)                                                                                          // 627\n  })                                                                                                                  // 628\n                                                                                                                      // 629\n}(jQuery);                                                                                                            // 630\n                                                                                                                      // 631\n/* ========================================================================                                           // 632\n * Bootstrap: dropdown.js v3.1.0                                                                                      // 633\n * http://getbootstrap.com/javascript/#dropdowns                                                                      // 634\n * ========================================================================                                           // 635\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 636\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 637\n * ======================================================================== */                                        // 638\n                                                                                                                      // 639\n                                                                                                                      // 640\n+function ($) {                                                                                                       // 641\n  'use strict';                                                                                                       // 642\n                                                                                                                      // 643\n  // DROPDOWN CLASS DEFINITION                                                                                        // 644\n  // =========================                                                                                        // 645\n                                                                                                                      // 646\n  var backdrop = '.dropdown-backdrop'                                                                                 // 647\n  var toggle   = '[data-toggle=dropdown]'                                                                             // 648\n  var Dropdown = function (element) {                                                                                 // 649\n    $(element).on('click.bs.dropdown', this.toggle)                                                                   // 650\n  }                                                                                                                   // 651\n                                                                                                                      // 652\n  Dropdown.prototype.toggle = function (e) {                                                                          // 653\n    var $this = $(this)                                                                                               // 654\n                                                                                                                      // 655\n    if ($this.is('.disabled, :disabled')) return                                                                      // 656\n                                                                                                                      // 657\n    var $parent  = getParent($this)                                                                                   // 658\n    var isActive = $parent.hasClass('open')                                                                           // 659\n                                                                                                                      // 660\n    clearMenus()                                                                                                      // 661\n                                                                                                                      // 662\n    if (!isActive) {                                                                                                  // 663\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {                     // 664\n        // if mobile we use a backdrop because click events don't delegate                                            // 665\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)                            // 666\n      }                                                                                                               // 667\n                                                                                                                      // 668\n      var relatedTarget = { relatedTarget: this }                                                                     // 669\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))                                                 // 670\n                                                                                                                      // 671\n      if (e.isDefaultPrevented()) return                                                                              // 672\n                                                                                                                      // 673\n      $parent                                                                                                         // 674\n        .toggleClass('open')                                                                                          // 675\n        .trigger('shown.bs.dropdown', relatedTarget)                                                                  // 676\n                                                                                                                      // 677\n      $this.focus()                                                                                                   // 678\n    }                                                                                                                 // 679\n                                                                                                                      // 680\n    return false                                                                                                      // 681\n  }                                                                                                                   // 682\n                                                                                                                      // 683\n  Dropdown.prototype.keydown = function (e) {                                                                         // 684\n    if (!/(38|40|27)/.test(e.keyCode)) return                                                                         // 685\n                                                                                                                      // 686\n    var $this = $(this)                                                                                               // 687\n                                                                                                                      // 688\n    e.preventDefault()                                                                                                // 689\n    e.stopPropagation()                                                                                               // 690\n                                                                                                                      // 691\n    if ($this.is('.disabled, :disabled')) return                                                                      // 692\n                                                                                                                      // 693\n    var $parent  = getParent($this)                                                                                   // 694\n    var isActive = $parent.hasClass('open')                                                                           // 695\n                                                                                                                      // 696\n    if (!isActive || (isActive && e.keyCode == 27)) {                                                                 // 697\n      if (e.which == 27) $parent.find(toggle).focus()                                                                 // 698\n      return $this.click()                                                                                            // 699\n    }                                                                                                                 // 700\n                                                                                                                      // 701\n    var desc = ' li:not(.divider):visible a'                                                                          // 702\n    var $items = $parent.find('[role=menu]' + desc + ', [role=listbox]' + desc)                                       // 703\n                                                                                                                      // 704\n    if (!$items.length) return                                                                                        // 705\n                                                                                                                      // 706\n    var index = $items.index($items.filter(':focus'))                                                                 // 707\n                                                                                                                      // 708\n    if (e.keyCode == 38 && index > 0)                 index--                        // up                            // 709\n    if (e.keyCode == 40 && index < $items.length - 1) index++                        // down                          // 710\n    if (!~index)                                      index = 0                                                       // 711\n                                                                                                                      // 712\n    $items.eq(index).focus()                                                                                          // 713\n  }                                                                                                                   // 714\n                                                                                                                      // 715\n  function clearMenus(e) {                                                                                            // 716\n    $(backdrop).remove()                                                                                              // 717\n    $(toggle).each(function () {                                                                                      // 718\n      var $parent = getParent($(this))                                                                                // 719\n      var relatedTarget = { relatedTarget: this }                                                                     // 720\n      if (!$parent.hasClass('open')) return                                                                           // 721\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))                                                 // 722\n      if (e.isDefaultPrevented()) return                                                                              // 723\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)                                        // 724\n    })                                                                                                                // 725\n  }                                                                                                                   // 726\n                                                                                                                      // 727\n  function getParent($this) {                                                                                         // 728\n    var selector = $this.attr('data-target')                                                                          // 729\n                                                                                                                      // 730\n    if (!selector) {                                                                                                  // 731\n      selector = $this.attr('href')                                                                                   // 732\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7     // 733\n    }                                                                                                                 // 734\n                                                                                                                      // 735\n    var $parent = selector && $(selector)                                                                             // 736\n                                                                                                                      // 737\n    return $parent && $parent.length ? $parent : $this.parent()                                                       // 738\n  }                                                                                                                   // 739\n                                                                                                                      // 740\n                                                                                                                      // 741\n  // DROPDOWN PLUGIN DEFINITION                                                                                       // 742\n  // ==========================                                                                                       // 743\n                                                                                                                      // 744\n  var old = $.fn.dropdown                                                                                             // 745\n                                                                                                                      // 746\n  $.fn.dropdown = function (option) {                                                                                 // 747\n    return this.each(function () {                                                                                    // 748\n      var $this = $(this)                                                                                             // 749\n      var data  = $this.data('bs.dropdown')                                                                           // 750\n                                                                                                                      // 751\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))                                               // 752\n      if (typeof option == 'string') data[option].call($this)                                                         // 753\n    })                                                                                                                // 754\n  }                                                                                                                   // 755\n                                                                                                                      // 756\n  $.fn.dropdown.Constructor = Dropdown                                                                                // 757\n                                                                                                                      // 758\n                                                                                                                      // 759\n  // DROPDOWN NO CONFLICT                                                                                             // 760\n  // ====================                                                                                             // 761\n                                                                                                                      // 762\n  $.fn.dropdown.noConflict = function () {                                                                            // 763\n    $.fn.dropdown = old                                                                                               // 764\n    return this                                                                                                       // 765\n  }                                                                                                                   // 766\n                                                                                                                      // 767\n                                                                                                                      // 768\n  // APPLY TO STANDARD DROPDOWN ELEMENTS                                                                              // 769\n  // ===================================                                                                              // 770\n                                                                                                                      // 771\n  $(document)                                                                                                         // 772\n    .on('click.bs.dropdown.data-api', clearMenus)                                                                     // 773\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })                         // 774\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)                                              // 775\n    .on('keydown.bs.dropdown.data-api', toggle + ', [role=menu], [role=listbox]', Dropdown.prototype.keydown)         // 776\n                                                                                                                      // 777\n}(jQuery);                                                                                                            // 778\n                                                                                                                      // 779\n/* ========================================================================                                           // 780\n * Bootstrap: modal.js v3.1.0                                                                                         // 781\n * http://getbootstrap.com/javascript/#modals                                                                         // 782\n * ========================================================================                                           // 783\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 784\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 785\n * ======================================================================== */                                        // 786\n                                                                                                                      // 787\n                                                                                                                      // 788\n+function ($) {                                                                                                       // 789\n  'use strict';                                                                                                       // 790\n                                                                                                                      // 791\n  // MODAL CLASS DEFINITION                                                                                           // 792\n  // ======================                                                                                           // 793\n                                                                                                                      // 794\n  var Modal = function (element, options) {                                                                           // 795\n    this.options   = options                                                                                          // 796\n    this.$element  = $(element)                                                                                       // 797\n    this.$backdrop =                                                                                                  // 798\n    this.isShown   = null                                                                                             // 799\n                                                                                                                      // 800\n    if (this.options.remote) {                                                                                        // 801\n      this.$element                                                                                                   // 802\n        .find('.modal-content')                                                                                       // 803\n        .load(this.options.remote, $.proxy(function () {                                                              // 804\n          this.$element.trigger('loaded.bs.modal')                                                                    // 805\n        }, this))                                                                                                     // 806\n    }                                                                                                                 // 807\n  }                                                                                                                   // 808\n                                                                                                                      // 809\n  Modal.DEFAULTS = {                                                                                                  // 810\n    backdrop: true,                                                                                                   // 811\n    keyboard: true,                                                                                                   // 812\n    show: true                                                                                                        // 813\n  }                                                                                                                   // 814\n                                                                                                                      // 815\n  Modal.prototype.toggle = function (_relatedTarget) {                                                                // 816\n    return this[!this.isShown ? 'show' : 'hide'](_relatedTarget)                                                      // 817\n  }                                                                                                                   // 818\n                                                                                                                      // 819\n  Modal.prototype.show = function (_relatedTarget) {                                                                  // 820\n    var that = this                                                                                                   // 821\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })                                            // 822\n                                                                                                                      // 823\n    this.$element.trigger(e)                                                                                          // 824\n                                                                                                                      // 825\n    if (this.isShown || e.isDefaultPrevented()) return                                                                // 826\n                                                                                                                      // 827\n    this.isShown = true                                                                                               // 828\n                                                                                                                      // 829\n    this.escape()                                                                                                     // 830\n                                                                                                                      // 831\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))                    // 832\n                                                                                                                      // 833\n    this.backdrop(function () {                                                                                       // 834\n      var transition = $.support.transition && that.$element.hasClass('fade')                                         // 835\n                                                                                                                      // 836\n      if (!that.$element.parent().length) {                                                                           // 837\n        that.$element.appendTo(document.body) // don't move modals dom position                                       // 838\n      }                                                                                                               // 839\n                                                                                                                      // 840\n      that.$element                                                                                                   // 841\n        .show()                                                                                                       // 842\n        .scrollTop(0)                                                                                                 // 843\n                                                                                                                      // 844\n      if (transition) {                                                                                               // 845\n        that.$element[0].offsetWidth // force reflow                                                                  // 846\n      }                                                                                                               // 847\n                                                                                                                      // 848\n      that.$element                                                                                                   // 849\n        .addClass('in')                                                                                               // 850\n        .attr('aria-hidden', false)                                                                                   // 851\n                                                                                                                      // 852\n      that.enforceFocus()                                                                                             // 853\n                                                                                                                      // 854\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })                                            // 855\n                                                                                                                      // 856\n      transition ?                                                                                                    // 857\n        that.$element.find('.modal-dialog') // wait for modal to slide in                                             // 858\n          .one($.support.transition.end, function () {                                                                // 859\n            that.$element.focus().trigger(e)                                                                          // 860\n          })                                                                                                          // 861\n          .emulateTransitionEnd(300) :                                                                                // 862\n        that.$element.focus().trigger(e)                                                                              // 863\n    })                                                                                                                // 864\n  }                                                                                                                   // 865\n                                                                                                                      // 866\n  Modal.prototype.hide = function (e) {                                                                               // 867\n    if (e) e.preventDefault()                                                                                         // 868\n                                                                                                                      // 869\n    e = $.Event('hide.bs.modal')                                                                                      // 870\n                                                                                                                      // 871\n    this.$element.trigger(e)                                                                                          // 872\n                                                                                                                      // 873\n    if (!this.isShown || e.isDefaultPrevented()) return                                                               // 874\n                                                                                                                      // 875\n    this.isShown = false                                                                                              // 876\n                                                                                                                      // 877\n    this.escape()                                                                                                     // 878\n                                                                                                                      // 879\n    $(document).off('focusin.bs.modal')                                                                               // 880\n                                                                                                                      // 881\n    this.$element                                                                                                     // 882\n      .removeClass('in')                                                                                              // 883\n      .attr('aria-hidden', true)                                                                                      // 884\n      .off('click.dismiss.bs.modal')                                                                                  // 885\n                                                                                                                      // 886\n    $.support.transition && this.$element.hasClass('fade') ?                                                          // 887\n      this.$element                                                                                                   // 888\n        .one($.support.transition.end, $.proxy(this.hideModal, this))                                                 // 889\n        .emulateTransitionEnd(300) :                                                                                  // 890\n      this.hideModal()                                                                                                // 891\n  }                                                                                                                   // 892\n                                                                                                                      // 893\n  Modal.prototype.enforceFocus = function () {                                                                        // 894\n    $(document)                                                                                                       // 895\n      .off('focusin.bs.modal') // guard against infinite focus loop                                                   // 896\n      .on('focusin.bs.modal', $.proxy(function (e) {                                                                  // 897\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {                                   // 898\n          this.$element.focus()                                                                                       // 899\n        }                                                                                                             // 900\n      }, this))                                                                                                       // 901\n  }                                                                                                                   // 902\n                                                                                                                      // 903\n  Modal.prototype.escape = function () {                                                                              // 904\n    if (this.isShown && this.options.keyboard) {                                                                      // 905\n      this.$element.on('keyup.dismiss.bs.modal', $.proxy(function (e) {                                               // 906\n        e.which == 27 && this.hide()                                                                                  // 907\n      }, this))                                                                                                       // 908\n    } else if (!this.isShown) {                                                                                       // 909\n      this.$element.off('keyup.dismiss.bs.modal')                                                                     // 910\n    }                                                                                                                 // 911\n  }                                                                                                                   // 912\n                                                                                                                      // 913\n  Modal.prototype.hideModal = function () {                                                                           // 914\n    var that = this                                                                                                   // 915\n    this.$element.hide()                                                                                              // 916\n    this.backdrop(function () {                                                                                       // 917\n      that.removeBackdrop()                                                                                           // 918\n      that.$element.trigger('hidden.bs.modal')                                                                        // 919\n    })                                                                                                                // 920\n  }                                                                                                                   // 921\n                                                                                                                      // 922\n  Modal.prototype.removeBackdrop = function () {                                                                      // 923\n    this.$backdrop && this.$backdrop.remove()                                                                         // 924\n    this.$backdrop = null                                                                                             // 925\n  }                                                                                                                   // 926\n                                                                                                                      // 927\n  Modal.prototype.backdrop = function (callback) {                                                                    // 928\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''                                                        // 929\n                                                                                                                      // 930\n    if (this.isShown && this.options.backdrop) {                                                                      // 931\n      var doAnimate = $.support.transition && animate                                                                 // 932\n                                                                                                                      // 933\n      this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')                                            // 934\n        .appendTo(document.body)                                                                                      // 935\n                                                                                                                      // 936\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {                                               // 937\n        if (e.target !== e.currentTarget) return                                                                      // 938\n        this.options.backdrop == 'static'                                                                             // 939\n          ? this.$element[0].focus.call(this.$element[0])                                                             // 940\n          : this.hide.call(this)                                                                                      // 941\n      }, this))                                                                                                       // 942\n                                                                                                                      // 943\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow                                                    // 944\n                                                                                                                      // 945\n      this.$backdrop.addClass('in')                                                                                   // 946\n                                                                                                                      // 947\n      if (!callback) return                                                                                           // 948\n                                                                                                                      // 949\n      doAnimate ?                                                                                                     // 950\n        this.$backdrop                                                                                                // 951\n          .one($.support.transition.end, callback)                                                                    // 952\n          .emulateTransitionEnd(150) :                                                                                // 953\n        callback()                                                                                                    // 954\n                                                                                                                      // 955\n    } else if (!this.isShown && this.$backdrop) {                                                                     // 956\n      this.$backdrop.removeClass('in')                                                                                // 957\n                                                                                                                      // 958\n      $.support.transition && this.$element.hasClass('fade') ?                                                        // 959\n        this.$backdrop                                                                                                // 960\n          .one($.support.transition.end, callback)                                                                    // 961\n          .emulateTransitionEnd(150) :                                                                                // 962\n        callback()                                                                                                    // 963\n                                                                                                                      // 964\n    } else if (callback) {                                                                                            // 965\n      callback()                                                                                                      // 966\n    }                                                                                                                 // 967\n  }                                                                                                                   // 968\n                                                                                                                      // 969\n                                                                                                                      // 970\n  // MODAL PLUGIN DEFINITION                                                                                          // 971\n  // =======================                                                                                          // 972\n                                                                                                                      // 973\n  var old = $.fn.modal                                                                                                // 974\n                                                                                                                      // 975\n  $.fn.modal = function (option, _relatedTarget) {                                                                    // 976\n    return this.each(function () {                                                                                    // 977\n      var $this   = $(this)                                                                                           // 978\n      var data    = $this.data('bs.modal')                                                                            // 979\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)                   // 980\n                                                                                                                      // 981\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))                                            // 982\n      if (typeof option == 'string') data[option](_relatedTarget)                                                     // 983\n      else if (options.show) data.show(_relatedTarget)                                                                // 984\n    })                                                                                                                // 985\n  }                                                                                                                   // 986\n                                                                                                                      // 987\n  $.fn.modal.Constructor = Modal                                                                                      // 988\n                                                                                                                      // 989\n                                                                                                                      // 990\n  // MODAL NO CONFLICT                                                                                                // 991\n  // =================                                                                                                // 992\n                                                                                                                      // 993\n  $.fn.modal.noConflict = function () {                                                                               // 994\n    $.fn.modal = old                                                                                                  // 995\n    return this                                                                                                       // 996\n  }                                                                                                                   // 997\n                                                                                                                      // 998\n                                                                                                                      // 999\n  // MODAL DATA-API                                                                                                   // 1000\n  // ==============                                                                                                   // 1001\n                                                                                                                      // 1002\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {                                   // 1003\n    var $this   = $(this)                                                                                             // 1004\n    var href    = $this.attr('href')                                                                                  // 1005\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) //strip for ie7        // 1006\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n                                                                                                                      // 1008\n    if ($this.is('a')) e.preventDefault()                                                                             // 1009\n                                                                                                                      // 1010\n    $target                                                                                                           // 1011\n      .modal(option, this)                                                                                            // 1012\n      .one('hide', function () {                                                                                      // 1013\n        $this.is(':visible') && $this.focus()                                                                         // 1014\n      })                                                                                                              // 1015\n  })                                                                                                                  // 1016\n                                                                                                                      // 1017\n  $(document)                                                                                                         // 1018\n    .on('show.bs.modal', '.modal', function () { $(document.body).addClass('modal-open') })                           // 1019\n    .on('hidden.bs.modal', '.modal', function () { $(document.body).removeClass('modal-open') })                      // 1020\n                                                                                                                      // 1021\n}(jQuery);                                                                                                            // 1022\n                                                                                                                      // 1023\n/* ========================================================================                                           // 1024\n * Bootstrap: tooltip.js v3.1.0                                                                                       // 1025\n * http://getbootstrap.com/javascript/#tooltip                                                                        // 1026\n * Inspired by the original jQuery.tipsy by Jason Frame                                                               // 1027\n * ========================================================================                                           // 1028\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 1029\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 1030\n * ======================================================================== */                                        // 1031\n                                                                                                                      // 1032\n                                                                                                                      // 1033\n+function ($) {                                                                                                       // 1034\n  'use strict';                                                                                                       // 1035\n                                                                                                                      // 1036\n  // TOOLTIP PUBLIC CLASS DEFINITION                                                                                  // 1037\n  // ===============================                                                                                  // 1038\n                                                                                                                      // 1039\n  var Tooltip = function (element, options) {                                                                         // 1040\n    this.type       =                                                                                                 // 1041\n    this.options    =                                                                                                 // 1042\n    this.enabled    =                                                                                                 // 1043\n    this.timeout    =                                                                                                 // 1044\n    this.hoverState =                                                                                                 // 1045\n    this.$element   = null                                                                                            // 1046\n                                                                                                                      // 1047\n    this.init('tooltip', element, options)                                                                            // 1048\n  }                                                                                                                   // 1049\n                                                                                                                      // 1050\n  Tooltip.DEFAULTS = {                                                                                                // 1051\n    animation: true,                                                                                                  // 1052\n    placement: 'top',                                                                                                 // 1053\n    selector: false,                                                                                                  // 1054\n    template: '<div class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',        // 1055\n    trigger: 'hover focus',                                                                                           // 1056\n    title: '',                                                                                                        // 1057\n    delay: 0,                                                                                                         // 1058\n    html: false,                                                                                                      // 1059\n    container: false                                                                                                  // 1060\n  }                                                                                                                   // 1061\n                                                                                                                      // 1062\n  Tooltip.prototype.init = function (type, element, options) {                                                        // 1063\n    this.enabled  = true                                                                                              // 1064\n    this.type     = type                                                                                              // 1065\n    this.$element = $(element)                                                                                        // 1066\n    this.options  = this.getOptions(options)                                                                          // 1067\n                                                                                                                      // 1068\n    var triggers = this.options.trigger.split(' ')                                                                    // 1069\n                                                                                                                      // 1070\n    for (var i = triggers.length; i--;) {                                                                             // 1071\n      var trigger = triggers[i]                                                                                       // 1072\n                                                                                                                      // 1073\n      if (trigger == 'click') {                                                                                       // 1074\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))                     // 1075\n      } else if (trigger != 'manual') {                                                                               // 1076\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'                                                  // 1077\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'                                                 // 1078\n                                                                                                                      // 1079\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))                // 1080\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))                // 1081\n      }                                                                                                               // 1082\n    }                                                                                                                 // 1083\n                                                                                                                      // 1084\n    this.options.selector ?                                                                                           // 1085\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :                             // 1086\n      this.fixTitle()                                                                                                 // 1087\n  }                                                                                                                   // 1088\n                                                                                                                      // 1089\n  Tooltip.prototype.getDefaults = function () {                                                                       // 1090\n    return Tooltip.DEFAULTS                                                                                           // 1091\n  }                                                                                                                   // 1092\n                                                                                                                      // 1093\n  Tooltip.prototype.getOptions = function (options) {                                                                 // 1094\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)                                         // 1095\n                                                                                                                      // 1096\n    if (options.delay && typeof options.delay == 'number') {                                                          // 1097\n      options.delay = {                                                                                               // 1098\n        show: options.delay,                                                                                          // 1099\n        hide: options.delay                                                                                           // 1100\n      }                                                                                                               // 1101\n    }                                                                                                                 // 1102\n                                                                                                                      // 1103\n    return options                                                                                                    // 1104\n  }                                                                                                                   // 1105\n                                                                                                                      // 1106\n  Tooltip.prototype.getDelegateOptions = function () {                                                                // 1107\n    var options  = {}                                                                                                 // 1108\n    var defaults = this.getDefaults()                                                                                 // 1109\n                                                                                                                      // 1110\n    this._options && $.each(this._options, function (key, value) {                                                    // 1111\n      if (defaults[key] != value) options[key] = value                                                                // 1112\n    })                                                                                                                // 1113\n                                                                                                                      // 1114\n    return options                                                                                                    // 1115\n  }                                                                                                                   // 1116\n                                                                                                                      // 1117\n  Tooltip.prototype.enter = function (obj) {                                                                          // 1118\n    var self = obj instanceof this.constructor ?                                                                      // 1119\n      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)                        // 1120\n                                                                                                                      // 1121\n    clearTimeout(self.timeout)                                                                                        // 1122\n                                                                                                                      // 1123\n    self.hoverState = 'in'                                                                                            // 1124\n                                                                                                                      // 1125\n    if (!self.options.delay || !self.options.delay.show) return self.show()                                           // 1126\n                                                                                                                      // 1127\n    self.timeout = setTimeout(function () {                                                                           // 1128\n      if (self.hoverState == 'in') self.show()                                                                        // 1129\n    }, self.options.delay.show)                                                                                       // 1130\n  }                                                                                                                   // 1131\n                                                                                                                      // 1132\n  Tooltip.prototype.leave = function (obj) {                                                                          // 1133\n    var self = obj instanceof this.constructor ?                                                                      // 1134\n      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)                        // 1135\n                                                                                                                      // 1136\n    clearTimeout(self.timeout)                                                                                        // 1137\n                                                                                                                      // 1138\n    self.hoverState = 'out'                                                                                           // 1139\n                                                                                                                      // 1140\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()                                           // 1141\n                                                                                                                      // 1142\n    self.timeout = setTimeout(function () {                                                                           // 1143\n      if (self.hoverState == 'out') self.hide()                                                                       // 1144\n    }, self.options.delay.hide)                                                                                       // 1145\n  }                                                                                                                   // 1146\n                                                                                                                      // 1147\n  Tooltip.prototype.show = function () {                                                                              // 1148\n    var e = $.Event('show.bs.' + this.type)                                                                           // 1149\n                                                                                                                      // 1150\n    if (this.hasContent() && this.enabled) {                                                                          // 1151\n      this.$element.trigger(e)                                                                                        // 1152\n                                                                                                                      // 1153\n      if (e.isDefaultPrevented()) return                                                                              // 1154\n      var that = this;                                                                                                // 1155\n                                                                                                                      // 1156\n      var $tip = this.tip()                                                                                           // 1157\n                                                                                                                      // 1158\n      this.setContent()                                                                                               // 1159\n                                                                                                                      // 1160\n      if (this.options.animation) $tip.addClass('fade')                                                               // 1161\n                                                                                                                      // 1162\n      var placement = typeof this.options.placement == 'function' ?                                                   // 1163\n        this.options.placement.call(this, $tip[0], this.$element[0]) :                                                // 1164\n        this.options.placement                                                                                        // 1165\n                                                                                                                      // 1166\n      var autoToken = /\\s?auto?\\s?/i                                                                                  // 1167\n      var autoPlace = autoToken.test(placement)                                                                       // 1168\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'                                            // 1169\n                                                                                                                      // 1170\n      $tip                                                                                                            // 1171\n        .detach()                                                                                                     // 1172\n        .css({ top: 0, left: 0, display: 'block' })                                                                   // 1173\n        .addClass(placement)                                                                                          // 1174\n                                                                                                                      // 1175\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)                // 1176\n                                                                                                                      // 1177\n      var pos          = this.getPosition()                                                                           // 1178\n      var actualWidth  = $tip[0].offsetWidth                                                                          // 1179\n      var actualHeight = $tip[0].offsetHeight                                                                         // 1180\n                                                                                                                      // 1181\n      if (autoPlace) {                                                                                                // 1182\n        var $parent = this.$element.parent()                                                                          // 1183\n                                                                                                                      // 1184\n        var orgPlacement = placement                                                                                  // 1185\n        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop                              // 1186\n        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()               // 1187\n        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()              // 1188\n        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left                               // 1189\n                                                                                                                      // 1190\n        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :\n                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :\n                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :\n                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :\n                    placement                                                                                         // 1195\n                                                                                                                      // 1196\n        $tip                                                                                                          // 1197\n          .removeClass(orgPlacement)                                                                                  // 1198\n          .addClass(placement)                                                                                        // 1199\n      }                                                                                                               // 1200\n                                                                                                                      // 1201\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)                      // 1202\n                                                                                                                      // 1203\n      this.applyPlacement(calculatedOffset, placement)                                                                // 1204\n      this.hoverState = null                                                                                          // 1205\n                                                                                                                      // 1206\n      var complete = function() {                                                                                     // 1207\n        that.$element.trigger('shown.bs.' + that.type)                                                                // 1208\n      }                                                                                                               // 1209\n                                                                                                                      // 1210\n      $.support.transition && this.$tip.hasClass('fade') ?                                                            // 1211\n        $tip                                                                                                          // 1212\n          .one($.support.transition.end, complete)                                                                    // 1213\n          .emulateTransitionEnd(150) :                                                                                // 1214\n        complete()                                                                                                    // 1215\n    }                                                                                                                 // 1216\n  }                                                                                                                   // 1217\n                                                                                                                      // 1218\n  Tooltip.prototype.applyPlacement = function (offset, placement) {                                                   // 1219\n    var replace                                                                                                       // 1220\n    var $tip   = this.tip()                                                                                           // 1221\n    var width  = $tip[0].offsetWidth                                                                                  // 1222\n    var height = $tip[0].offsetHeight                                                                                 // 1223\n                                                                                                                      // 1224\n    // manually read margins because getBoundingClientRect includes difference                                        // 1225\n    var marginTop = parseInt($tip.css('margin-top'), 10)                                                              // 1226\n    var marginLeft = parseInt($tip.css('margin-left'), 10)                                                            // 1227\n                                                                                                                      // 1228\n    // we must check for NaN for ie 8/9                                                                               // 1229\n    if (isNaN(marginTop))  marginTop  = 0                                                                             // 1230\n    if (isNaN(marginLeft)) marginLeft = 0                                                                             // 1231\n                                                                                                                      // 1232\n    offset.top  = offset.top  + marginTop                                                                             // 1233\n    offset.left = offset.left + marginLeft                                                                            // 1234\n                                                                                                                      // 1235\n    // $.fn.offset doesn't round pixel values                                                                         // 1236\n    // so we use setOffset directly with our own function B-0                                                         // 1237\n    $.offset.setOffset($tip[0], $.extend({                                                                            // 1238\n      using: function (props) {                                                                                       // 1239\n        $tip.css({                                                                                                    // 1240\n          top: Math.round(props.top),                                                                                 // 1241\n          left: Math.round(props.left)                                                                                // 1242\n        })                                                                                                            // 1243\n      }                                                                                                               // 1244\n    }, offset), 0)                                                                                                    // 1245\n                                                                                                                      // 1246\n    $tip.addClass('in')                                                                                               // 1247\n                                                                                                                      // 1248\n    // check to see if placing tip in new offset caused the tip to resize itself                                      // 1249\n    var actualWidth  = $tip[0].offsetWidth                                                                            // 1250\n    var actualHeight = $tip[0].offsetHeight                                                                           // 1251\n                                                                                                                      // 1252\n    if (placement == 'top' && actualHeight != height) {                                                               // 1253\n      replace = true                                                                                                  // 1254\n      offset.top = offset.top + height - actualHeight                                                                 // 1255\n    }                                                                                                                 // 1256\n                                                                                                                      // 1257\n    if (/bottom|top/.test(placement)) {                                                                               // 1258\n      var delta = 0                                                                                                   // 1259\n                                                                                                                      // 1260\n      if (offset.left < 0) {                                                                                          // 1261\n        delta       = offset.left * -2                                                                                // 1262\n        offset.left = 0                                                                                               // 1263\n                                                                                                                      // 1264\n        $tip.offset(offset)                                                                                           // 1265\n                                                                                                                      // 1266\n        actualWidth  = $tip[0].offsetWidth                                                                            // 1267\n        actualHeight = $tip[0].offsetHeight                                                                           // 1268\n      }                                                                                                               // 1269\n                                                                                                                      // 1270\n      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')                                             // 1271\n    } else {                                                                                                          // 1272\n      this.replaceArrow(actualHeight - height, actualHeight, 'top')                                                   // 1273\n    }                                                                                                                 // 1274\n                                                                                                                      // 1275\n    if (replace) $tip.offset(offset)                                                                                  // 1276\n  }                                                                                                                   // 1277\n                                                                                                                      // 1278\n  Tooltip.prototype.replaceArrow = function (delta, dimension, position) {                                            // 1279\n    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + '%') : '')                                     // 1280\n  }                                                                                                                   // 1281\n                                                                                                                      // 1282\n  Tooltip.prototype.setContent = function () {                                                                        // 1283\n    var $tip  = this.tip()                                                                                            // 1284\n    var title = this.getTitle()                                                                                       // 1285\n                                                                                                                      // 1286\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)                                           // 1287\n    $tip.removeClass('fade in top bottom left right')                                                                 // 1288\n  }                                                                                                                   // 1289\n                                                                                                                      // 1290\n  Tooltip.prototype.hide = function () {                                                                              // 1291\n    var that = this                                                                                                   // 1292\n    var $tip = this.tip()                                                                                             // 1293\n    var e    = $.Event('hide.bs.' + this.type)                                                                        // 1294\n                                                                                                                      // 1295\n    function complete() {                                                                                             // 1296\n      if (that.hoverState != 'in') $tip.detach()                                                                      // 1297\n      that.$element.trigger('hidden.bs.' + that.type)                                                                 // 1298\n    }                                                                                                                 // 1299\n                                                                                                                      // 1300\n    this.$element.trigger(e)                                                                                          // 1301\n                                                                                                                      // 1302\n    if (e.isDefaultPrevented()) return                                                                                // 1303\n                                                                                                                      // 1304\n    $tip.removeClass('in')                                                                                            // 1305\n                                                                                                                      // 1306\n    $.support.transition && this.$tip.hasClass('fade') ?                                                              // 1307\n      $tip                                                                                                            // 1308\n        .one($.support.transition.end, complete)                                                                      // 1309\n        .emulateTransitionEnd(150) :                                                                                  // 1310\n      complete()                                                                                                      // 1311\n                                                                                                                      // 1312\n    this.hoverState = null                                                                                            // 1313\n                                                                                                                      // 1314\n    return this                                                                                                       // 1315\n  }                                                                                                                   // 1316\n                                                                                                                      // 1317\n  Tooltip.prototype.fixTitle = function () {                                                                          // 1318\n    var $e = this.$element                                                                                            // 1319\n    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {                                     // 1320\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')                                        // 1321\n    }                                                                                                                 // 1322\n  }                                                                                                                   // 1323\n                                                                                                                      // 1324\n  Tooltip.prototype.hasContent = function () {                                                                        // 1325\n    return this.getTitle()                                                                                            // 1326\n  }                                                                                                                   // 1327\n                                                                                                                      // 1328\n  Tooltip.prototype.getPosition = function () {                                                                       // 1329\n    var el = this.$element[0]                                                                                         // 1330\n    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {              // 1331\n      width: el.offsetWidth,                                                                                          // 1332\n      height: el.offsetHeight                                                                                         // 1333\n    }, this.$element.offset())                                                                                        // 1334\n  }                                                                                                                   // 1335\n                                                                                                                      // 1336\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {                      // 1337\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   } // 1341\n  }                                                                                                                   // 1342\n                                                                                                                      // 1343\n  Tooltip.prototype.getTitle = function () {                                                                          // 1344\n    var title                                                                                                         // 1345\n    var $e = this.$element                                                                                            // 1346\n    var o  = this.options                                                                                             // 1347\n                                                                                                                      // 1348\n    title = $e.attr('data-original-title')                                                                            // 1349\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)                                              // 1350\n                                                                                                                      // 1351\n    return title                                                                                                      // 1352\n  }                                                                                                                   // 1353\n                                                                                                                      // 1354\n  Tooltip.prototype.tip = function () {                                                                               // 1355\n    return this.$tip = this.$tip || $(this.options.template)                                                          // 1356\n  }                                                                                                                   // 1357\n                                                                                                                      // 1358\n  Tooltip.prototype.arrow = function () {                                                                             // 1359\n    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')                                             // 1360\n  }                                                                                                                   // 1361\n                                                                                                                      // 1362\n  Tooltip.prototype.validate = function () {                                                                          // 1363\n    if (!this.$element[0].parentNode) {                                                                               // 1364\n      this.hide()                                                                                                     // 1365\n      this.$element = null                                                                                            // 1366\n      this.options  = null                                                                                            // 1367\n    }                                                                                                                 // 1368\n  }                                                                                                                   // 1369\n                                                                                                                      // 1370\n  Tooltip.prototype.enable = function () {                                                                            // 1371\n    this.enabled = true                                                                                               // 1372\n  }                                                                                                                   // 1373\n                                                                                                                      // 1374\n  Tooltip.prototype.disable = function () {                                                                           // 1375\n    this.enabled = false                                                                                              // 1376\n  }                                                                                                                   // 1377\n                                                                                                                      // 1378\n  Tooltip.prototype.toggleEnabled = function () {                                                                     // 1379\n    this.enabled = !this.enabled                                                                                      // 1380\n  }                                                                                                                   // 1381\n                                                                                                                      // 1382\n  Tooltip.prototype.toggle = function (e) {                                                                           // 1383\n    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this            // 1384\n    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)                                                   // 1385\n  }                                                                                                                   // 1386\n                                                                                                                      // 1387\n  Tooltip.prototype.destroy = function () {                                                                           // 1388\n    clearTimeout(this.timeout)                                                                                        // 1389\n    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)                                           // 1390\n  }                                                                                                                   // 1391\n                                                                                                                      // 1392\n                                                                                                                      // 1393\n  // TOOLTIP PLUGIN DEFINITION                                                                                        // 1394\n  // =========================                                                                                        // 1395\n                                                                                                                      // 1396\n  var old = $.fn.tooltip                                                                                              // 1397\n                                                                                                                      // 1398\n  $.fn.tooltip = function (option) {                                                                                  // 1399\n    return this.each(function () {                                                                                    // 1400\n      var $this   = $(this)                                                                                           // 1401\n      var data    = $this.data('bs.tooltip')                                                                          // 1402\n      var options = typeof option == 'object' && option                                                               // 1403\n                                                                                                                      // 1404\n      if (!data && option == 'destroy') return                                                                        // 1405\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))                                        // 1406\n      if (typeof option == 'string') data[option]()                                                                   // 1407\n    })                                                                                                                // 1408\n  }                                                                                                                   // 1409\n                                                                                                                      // 1410\n  $.fn.tooltip.Constructor = Tooltip                                                                                  // 1411\n                                                                                                                      // 1412\n                                                                                                                      // 1413\n  // TOOLTIP NO CONFLICT                                                                                              // 1414\n  // ===================                                                                                              // 1415\n                                                                                                                      // 1416\n  $.fn.tooltip.noConflict = function () {                                                                             // 1417\n    $.fn.tooltip = old                                                                                                // 1418\n    return this                                                                                                       // 1419\n  }                                                                                                                   // 1420\n                                                                                                                      // 1421\n}(jQuery);                                                                                                            // 1422\n                                                                                                                      // 1423\n/* ========================================================================                                           // 1424\n * Bootstrap: popover.js v3.1.0                                                                                       // 1425\n * http://getbootstrap.com/javascript/#popovers                                                                       // 1426\n * ========================================================================                                           // 1427\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 1428\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 1429\n * ======================================================================== */                                        // 1430\n                                                                                                                      // 1431\n                                                                                                                      // 1432\n+function ($) {                                                                                                       // 1433\n  'use strict';                                                                                                       // 1434\n                                                                                                                      // 1435\n  // POPOVER PUBLIC CLASS DEFINITION                                                                                  // 1436\n  // ===============================                                                                                  // 1437\n                                                                                                                      // 1438\n  var Popover = function (element, options) {                                                                         // 1439\n    this.init('popover', element, options)                                                                            // 1440\n  }                                                                                                                   // 1441\n                                                                                                                      // 1442\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')                                                   // 1443\n                                                                                                                      // 1444\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {                                                // 1445\n    placement: 'right',                                                                                               // 1446\n    trigger: 'click',                                                                                                 // 1447\n    content: '',                                                                                                      // 1448\n    template: '<div class=\"popover\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })                                                                                                                  // 1450\n                                                                                                                      // 1451\n                                                                                                                      // 1452\n  // NOTE: POPOVER EXTENDS tooltip.js                                                                                 // 1453\n  // ================================                                                                                 // 1454\n                                                                                                                      // 1455\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)                                                // 1456\n                                                                                                                      // 1457\n  Popover.prototype.constructor = Popover                                                                             // 1458\n                                                                                                                      // 1459\n  Popover.prototype.getDefaults = function () {                                                                       // 1460\n    return Popover.DEFAULTS                                                                                           // 1461\n  }                                                                                                                   // 1462\n                                                                                                                      // 1463\n  Popover.prototype.setContent = function () {                                                                        // 1464\n    var $tip    = this.tip()                                                                                          // 1465\n    var title   = this.getTitle()                                                                                     // 1466\n    var content = this.getContent()                                                                                   // 1467\n                                                                                                                      // 1468\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)                                           // 1469\n    $tip.find('.popover-content')[ // we use append for html objects to maintain js events                            // 1470\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'                                   // 1471\n    ](content)                                                                                                        // 1472\n                                                                                                                      // 1473\n    $tip.removeClass('fade top bottom left right in')                                                                 // 1474\n                                                                                                                      // 1475\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do                                      // 1476\n    // this manually by checking the contents.                                                                        // 1477\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()                                       // 1478\n  }                                                                                                                   // 1479\n                                                                                                                      // 1480\n  Popover.prototype.hasContent = function () {                                                                        // 1481\n    return this.getTitle() || this.getContent()                                                                       // 1482\n  }                                                                                                                   // 1483\n                                                                                                                      // 1484\n  Popover.prototype.getContent = function () {                                                                        // 1485\n    var $e = this.$element                                                                                            // 1486\n    var o  = this.options                                                                                             // 1487\n                                                                                                                      // 1488\n    return $e.attr('data-content')                                                                                    // 1489\n      || (typeof o.content == 'function' ?                                                                            // 1490\n            o.content.call($e[0]) :                                                                                   // 1491\n            o.content)                                                                                                // 1492\n  }                                                                                                                   // 1493\n                                                                                                                      // 1494\n  Popover.prototype.arrow = function () {                                                                             // 1495\n    return this.$arrow = this.$arrow || this.tip().find('.arrow')                                                     // 1496\n  }                                                                                                                   // 1497\n                                                                                                                      // 1498\n  Popover.prototype.tip = function () {                                                                               // 1499\n    if (!this.$tip) this.$tip = $(this.options.template)                                                              // 1500\n    return this.$tip                                                                                                  // 1501\n  }                                                                                                                   // 1502\n                                                                                                                      // 1503\n                                                                                                                      // 1504\n  // POPOVER PLUGIN DEFINITION                                                                                        // 1505\n  // =========================                                                                                        // 1506\n                                                                                                                      // 1507\n  var old = $.fn.popover                                                                                              // 1508\n                                                                                                                      // 1509\n  $.fn.popover = function (option) {                                                                                  // 1510\n    return this.each(function () {                                                                                    // 1511\n      var $this   = $(this)                                                                                           // 1512\n      var data    = $this.data('bs.popover')                                                                          // 1513\n      var options = typeof option == 'object' && option                                                               // 1514\n                                                                                                                      // 1515\n      if (!data && option == 'destroy') return                                                                        // 1516\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))                                        // 1517\n      if (typeof option == 'string') data[option]()                                                                   // 1518\n    })                                                                                                                // 1519\n  }                                                                                                                   // 1520\n                                                                                                                      // 1521\n  $.fn.popover.Constructor = Popover                                                                                  // 1522\n                                                                                                                      // 1523\n                                                                                                                      // 1524\n  // POPOVER NO CONFLICT                                                                                              // 1525\n  // ===================                                                                                              // 1526\n                                                                                                                      // 1527\n  $.fn.popover.noConflict = function () {                                                                             // 1528\n    $.fn.popover = old                                                                                                // 1529\n    return this                                                                                                       // 1530\n  }                                                                                                                   // 1531\n                                                                                                                      // 1532\n}(jQuery);                                                                                                            // 1533\n                                                                                                                      // 1534\n/* ========================================================================                                           // 1535\n * Bootstrap: scrollspy.js v3.1.0                                                                                     // 1536\n * http://getbootstrap.com/javascript/#scrollspy                                                                      // 1537\n * ========================================================================                                           // 1538\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 1539\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 1540\n * ======================================================================== */                                        // 1541\n                                                                                                                      // 1542\n                                                                                                                      // 1543\n+function ($) {                                                                                                       // 1544\n  'use strict';                                                                                                       // 1545\n                                                                                                                      // 1546\n  // SCROLLSPY CLASS DEFINITION                                                                                       // 1547\n  // ==========================                                                                                       // 1548\n                                                                                                                      // 1549\n  function ScrollSpy(element, options) {                                                                              // 1550\n    var href                                                                                                          // 1551\n    var process  = $.proxy(this.process, this)                                                                        // 1552\n                                                                                                                      // 1553\n    this.$element       = $(element).is('body') ? $(window) : $(element)                                              // 1554\n    this.$body          = $('body')                                                                                   // 1555\n    this.$scrollElement = this.$element.on('scroll.bs.scroll-spy.data-api', process)                                  // 1556\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)                                                   // 1557\n    this.selector       = (this.options.target                                                                        // 1558\n      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) //strip for ie7                     // 1559\n      || '') + ' .nav li > a'                                                                                         // 1560\n    this.offsets        = $([])                                                                                       // 1561\n    this.targets        = $([])                                                                                       // 1562\n    this.activeTarget   = null                                                                                        // 1563\n                                                                                                                      // 1564\n    this.refresh()                                                                                                    // 1565\n    this.process()                                                                                                    // 1566\n  }                                                                                                                   // 1567\n                                                                                                                      // 1568\n  ScrollSpy.DEFAULTS = {                                                                                              // 1569\n    offset: 10                                                                                                        // 1570\n  }                                                                                                                   // 1571\n                                                                                                                      // 1572\n  ScrollSpy.prototype.refresh = function () {                                                                         // 1573\n    var offsetMethod = this.$element[0] == window ? 'offset' : 'position'                                             // 1574\n                                                                                                                      // 1575\n    this.offsets = $([])                                                                                              // 1576\n    this.targets = $([])                                                                                              // 1577\n                                                                                                                      // 1578\n    var self     = this                                                                                               // 1579\n    var $targets = this.$body                                                                                         // 1580\n      .find(this.selector)                                                                                            // 1581\n      .map(function () {                                                                                              // 1582\n        var $el   = $(this)                                                                                           // 1583\n        var href  = $el.data('target') || $el.attr('href')                                                            // 1584\n        var $href = /^#./.test(href) && $(href)                                                                       // 1585\n                                                                                                                      // 1586\n        return ($href                                                                                                 // 1587\n          && $href.length                                                                                             // 1588\n          && $href.is(':visible')                                                                                     // 1589\n          && [[ $href[offsetMethod]().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]]) || null\n      })                                                                                                              // 1591\n      .sort(function (a, b) { return a[0] - b[0] })                                                                   // 1592\n      .each(function () {                                                                                             // 1593\n        self.offsets.push(this[0])                                                                                    // 1594\n        self.targets.push(this[1])                                                                                    // 1595\n      })                                                                                                              // 1596\n  }                                                                                                                   // 1597\n                                                                                                                      // 1598\n  ScrollSpy.prototype.process = function () {                                                                         // 1599\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset                                          // 1600\n    var scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight                              // 1601\n    var maxScroll    = scrollHeight - this.$scrollElement.height()                                                    // 1602\n    var offsets      = this.offsets                                                                                   // 1603\n    var targets      = this.targets                                                                                   // 1604\n    var activeTarget = this.activeTarget                                                                              // 1605\n    var i                                                                                                             // 1606\n                                                                                                                      // 1607\n    if (scrollTop >= maxScroll) {                                                                                     // 1608\n      return activeTarget != (i = targets.last()[0]) && this.activate(i)                                              // 1609\n    }                                                                                                                 // 1610\n                                                                                                                      // 1611\n    if (activeTarget && scrollTop <= offsets[0]) {                                                                    // 1612\n      return activeTarget != (i = targets[0]) && this.activate(i)                                                     // 1613\n    }                                                                                                                 // 1614\n                                                                                                                      // 1615\n    for (i = offsets.length; i--;) {                                                                                  // 1616\n      activeTarget != targets[i]                                                                                      // 1617\n        && scrollTop >= offsets[i]                                                                                    // 1618\n        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])                                                           // 1619\n        && this.activate( targets[i] )                                                                                // 1620\n    }                                                                                                                 // 1621\n  }                                                                                                                   // 1622\n                                                                                                                      // 1623\n  ScrollSpy.prototype.activate = function (target) {                                                                  // 1624\n    this.activeTarget = target                                                                                        // 1625\n                                                                                                                      // 1626\n    $(this.selector)                                                                                                  // 1627\n      .parentsUntil(this.options.target, '.active')                                                                   // 1628\n      .removeClass('active')                                                                                          // 1629\n                                                                                                                      // 1630\n    var selector = this.selector +                                                                                    // 1631\n        '[data-target=\"' + target + '\"],' +                                                                           // 1632\n        this.selector + '[href=\"' + target + '\"]'                                                                     // 1633\n                                                                                                                      // 1634\n    var active = $(selector)                                                                                          // 1635\n      .parents('li')                                                                                                  // 1636\n      .addClass('active')                                                                                             // 1637\n                                                                                                                      // 1638\n    if (active.parent('.dropdown-menu').length) {                                                                     // 1639\n      active = active                                                                                                 // 1640\n        .closest('li.dropdown')                                                                                       // 1641\n        .addClass('active')                                                                                           // 1642\n    }                                                                                                                 // 1643\n                                                                                                                      // 1644\n    active.trigger('activate.bs.scrollspy')                                                                           // 1645\n  }                                                                                                                   // 1646\n                                                                                                                      // 1647\n                                                                                                                      // 1648\n  // SCROLLSPY PLUGIN DEFINITION                                                                                      // 1649\n  // ===========================                                                                                      // 1650\n                                                                                                                      // 1651\n  var old = $.fn.scrollspy                                                                                            // 1652\n                                                                                                                      // 1653\n  $.fn.scrollspy = function (option) {                                                                                // 1654\n    return this.each(function () {                                                                                    // 1655\n      var $this   = $(this)                                                                                           // 1656\n      var data    = $this.data('bs.scrollspy')                                                                        // 1657\n      var options = typeof option == 'object' && option                                                               // 1658\n                                                                                                                      // 1659\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))                                    // 1660\n      if (typeof option == 'string') data[option]()                                                                   // 1661\n    })                                                                                                                // 1662\n  }                                                                                                                   // 1663\n                                                                                                                      // 1664\n  $.fn.scrollspy.Constructor = ScrollSpy                                                                              // 1665\n                                                                                                                      // 1666\n                                                                                                                      // 1667\n  // SCROLLSPY NO CONFLICT                                                                                            // 1668\n  // =====================                                                                                            // 1669\n                                                                                                                      // 1670\n  $.fn.scrollspy.noConflict = function () {                                                                           // 1671\n    $.fn.scrollspy = old                                                                                              // 1672\n    return this                                                                                                       // 1673\n  }                                                                                                                   // 1674\n                                                                                                                      // 1675\n                                                                                                                      // 1676\n  // SCROLLSPY DATA-API                                                                                               // 1677\n  // ==================                                                                                               // 1678\n                                                                                                                      // 1679\n  $(window).on('load', function () {                                                                                  // 1680\n    $('[data-spy=\"scroll\"]').each(function () {                                                                       // 1681\n      var $spy = $(this)                                                                                              // 1682\n      $spy.scrollspy($spy.data())                                                                                     // 1683\n    })                                                                                                                // 1684\n  })                                                                                                                  // 1685\n                                                                                                                      // 1686\n}(jQuery);                                                                                                            // 1687\n                                                                                                                      // 1688\n/* ========================================================================                                           // 1689\n * Bootstrap: tab.js v3.1.0                                                                                           // 1690\n * http://getbootstrap.com/javascript/#tabs                                                                           // 1691\n * ========================================================================                                           // 1692\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 1693\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 1694\n * ======================================================================== */                                        // 1695\n                                                                                                                      // 1696\n                                                                                                                      // 1697\n+function ($) {                                                                                                       // 1698\n  'use strict';                                                                                                       // 1699\n                                                                                                                      // 1700\n  // TAB CLASS DEFINITION                                                                                             // 1701\n  // ====================                                                                                             // 1702\n                                                                                                                      // 1703\n  var Tab = function (element) {                                                                                      // 1704\n    this.element = $(element)                                                                                         // 1705\n  }                                                                                                                   // 1706\n                                                                                                                      // 1707\n  Tab.prototype.show = function () {                                                                                  // 1708\n    var $this    = this.element                                                                                       // 1709\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')                                                            // 1710\n    var selector = $this.data('target')                                                                               // 1711\n                                                                                                                      // 1712\n    if (!selector) {                                                                                                  // 1713\n      selector = $this.attr('href')                                                                                   // 1714\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7                                   // 1715\n    }                                                                                                                 // 1716\n                                                                                                                      // 1717\n    if ($this.parent('li').hasClass('active')) return                                                                 // 1718\n                                                                                                                      // 1719\n    var previous = $ul.find('.active:last a')[0]                                                                      // 1720\n    var e        = $.Event('show.bs.tab', {                                                                           // 1721\n      relatedTarget: previous                                                                                         // 1722\n    })                                                                                                                // 1723\n                                                                                                                      // 1724\n    $this.trigger(e)                                                                                                  // 1725\n                                                                                                                      // 1726\n    if (e.isDefaultPrevented()) return                                                                                // 1727\n                                                                                                                      // 1728\n    var $target = $(selector)                                                                                         // 1729\n                                                                                                                      // 1730\n    this.activate($this.parent('li'), $ul)                                                                            // 1731\n    this.activate($target, $target.parent(), function () {                                                            // 1732\n      $this.trigger({                                                                                                 // 1733\n        type: 'shown.bs.tab',                                                                                         // 1734\n        relatedTarget: previous                                                                                       // 1735\n      })                                                                                                              // 1736\n    })                                                                                                                // 1737\n  }                                                                                                                   // 1738\n                                                                                                                      // 1739\n  Tab.prototype.activate = function (element, container, callback) {                                                  // 1740\n    var $active    = container.find('> .active')                                                                      // 1741\n    var transition = callback                                                                                         // 1742\n      && $.support.transition                                                                                         // 1743\n      && $active.hasClass('fade')                                                                                     // 1744\n                                                                                                                      // 1745\n    function next() {                                                                                                 // 1746\n      $active                                                                                                         // 1747\n        .removeClass('active')                                                                                        // 1748\n        .find('> .dropdown-menu > .active')                                                                           // 1749\n        .removeClass('active')                                                                                        // 1750\n                                                                                                                      // 1751\n      element.addClass('active')                                                                                      // 1752\n                                                                                                                      // 1753\n      if (transition) {                                                                                               // 1754\n        element[0].offsetWidth // reflow for transition                                                               // 1755\n        element.addClass('in')                                                                                        // 1756\n      } else {                                                                                                        // 1757\n        element.removeClass('fade')                                                                                   // 1758\n      }                                                                                                               // 1759\n                                                                                                                      // 1760\n      if (element.parent('.dropdown-menu')) {                                                                         // 1761\n        element.closest('li.dropdown').addClass('active')                                                             // 1762\n      }                                                                                                               // 1763\n                                                                                                                      // 1764\n      callback && callback()                                                                                          // 1765\n    }                                                                                                                 // 1766\n                                                                                                                      // 1767\n    transition ?                                                                                                      // 1768\n      $active                                                                                                         // 1769\n        .one($.support.transition.end, next)                                                                          // 1770\n        .emulateTransitionEnd(150) :                                                                                  // 1771\n      next()                                                                                                          // 1772\n                                                                                                                      // 1773\n    $active.removeClass('in')                                                                                         // 1774\n  }                                                                                                                   // 1775\n                                                                                                                      // 1776\n                                                                                                                      // 1777\n  // TAB PLUGIN DEFINITION                                                                                            // 1778\n  // =====================                                                                                            // 1779\n                                                                                                                      // 1780\n  var old = $.fn.tab                                                                                                  // 1781\n                                                                                                                      // 1782\n  $.fn.tab = function ( option ) {                                                                                    // 1783\n    return this.each(function () {                                                                                    // 1784\n      var $this = $(this)                                                                                             // 1785\n      var data  = $this.data('bs.tab')                                                                                // 1786\n                                                                                                                      // 1787\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))                                                         // 1788\n      if (typeof option == 'string') data[option]()                                                                   // 1789\n    })                                                                                                                // 1790\n  }                                                                                                                   // 1791\n                                                                                                                      // 1792\n  $.fn.tab.Constructor = Tab                                                                                          // 1793\n                                                                                                                      // 1794\n                                                                                                                      // 1795\n  // TAB NO CONFLICT                                                                                                  // 1796\n  // ===============                                                                                                  // 1797\n                                                                                                                      // 1798\n  $.fn.tab.noConflict = function () {                                                                                 // 1799\n    $.fn.tab = old                                                                                                    // 1800\n    return this                                                                                                       // 1801\n  }                                                                                                                   // 1802\n                                                                                                                      // 1803\n                                                                                                                      // 1804\n  // TAB DATA-API                                                                                                     // 1805\n  // ============                                                                                                     // 1806\n                                                                                                                      // 1807\n  $(document).on('click.bs.tab.data-api', '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', function (e) {                 // 1808\n    e.preventDefault()                                                                                                // 1809\n    $(this).tab('show')                                                                                               // 1810\n  })                                                                                                                  // 1811\n                                                                                                                      // 1812\n}(jQuery);                                                                                                            // 1813\n                                                                                                                      // 1814\n/* ========================================================================                                           // 1815\n * Bootstrap: affix.js v3.1.0                                                                                         // 1816\n * http://getbootstrap.com/javascript/#affix                                                                          // 1817\n * ========================================================================                                           // 1818\n * Copyright 2011-2014 Twitter, Inc.                                                                                  // 1819\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 1820\n * ======================================================================== */                                        // 1821\n                                                                                                                      // 1822\n                                                                                                                      // 1823\n+function ($) {                                                                                                       // 1824\n  'use strict';                                                                                                       // 1825\n                                                                                                                      // 1826\n  // AFFIX CLASS DEFINITION                                                                                           // 1827\n  // ======================                                                                                           // 1828\n                                                                                                                      // 1829\n  var Affix = function (element, options) {                                                                           // 1830\n    this.options = $.extend({}, Affix.DEFAULTS, options)                                                              // 1831\n    this.$window = $(window)                                                                                          // 1832\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))                                              // 1833\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))                                 // 1834\n                                                                                                                      // 1835\n    this.$element     = $(element)                                                                                    // 1836\n    this.affixed      =                                                                                               // 1837\n    this.unpin        =                                                                                               // 1838\n    this.pinnedOffset = null                                                                                          // 1839\n                                                                                                                      // 1840\n    this.checkPosition()                                                                                              // 1841\n  }                                                                                                                   // 1842\n                                                                                                                      // 1843\n  Affix.RESET = 'affix affix-top affix-bottom'                                                                        // 1844\n                                                                                                                      // 1845\n  Affix.DEFAULTS = {                                                                                                  // 1846\n    offset: 0                                                                                                         // 1847\n  }                                                                                                                   // 1848\n                                                                                                                      // 1849\n  Affix.prototype.getPinnedOffset = function () {                                                                     // 1850\n    if (this.pinnedOffset) return this.pinnedOffset                                                                   // 1851\n    this.$element.removeClass(Affix.RESET).addClass('affix')                                                          // 1852\n    var scrollTop = this.$window.scrollTop()                                                                          // 1853\n    var position  = this.$element.offset()                                                                            // 1854\n    return (this.pinnedOffset = position.top - scrollTop)                                                             // 1855\n  }                                                                                                                   // 1856\n                                                                                                                      // 1857\n  Affix.prototype.checkPositionWithEventLoop = function () {                                                          // 1858\n    setTimeout($.proxy(this.checkPosition, this), 1)                                                                  // 1859\n  }                                                                                                                   // 1860\n                                                                                                                      // 1861\n  Affix.prototype.checkPosition = function () {                                                                       // 1862\n    if (!this.$element.is(':visible')) return                                                                         // 1863\n                                                                                                                      // 1864\n    var scrollHeight = $(document).height()                                                                           // 1865\n    var scrollTop    = this.$window.scrollTop()                                                                       // 1866\n    var position     = this.$element.offset()                                                                         // 1867\n    var offset       = this.options.offset                                                                            // 1868\n    var offsetTop    = offset.top                                                                                     // 1869\n    var offsetBottom = offset.bottom                                                                                  // 1870\n                                                                                                                      // 1871\n    if (this.affixed == 'top') position.top += scrollTop                                                              // 1872\n                                                                                                                      // 1873\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset                                          // 1874\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)                                   // 1875\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)                                // 1876\n                                                                                                                      // 1877\n    var affix = this.unpin   != null && (scrollTop + this.unpin <= position.top) ? false :                            // 1878\n                offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ? 'bottom' :\n                offsetTop    != null && (scrollTop <= offsetTop) ? 'top' : false                                      // 1880\n                                                                                                                      // 1881\n    if (this.affixed === affix) return                                                                                // 1882\n    if (this.unpin) this.$element.css('top', '')                                                                      // 1883\n                                                                                                                      // 1884\n    var affixType = 'affix' + (affix ? '-' + affix : '')                                                              // 1885\n    var e         = $.Event(affixType + '.bs.affix')                                                                  // 1886\n                                                                                                                      // 1887\n    this.$element.trigger(e)                                                                                          // 1888\n                                                                                                                      // 1889\n    if (e.isDefaultPrevented()) return                                                                                // 1890\n                                                                                                                      // 1891\n    this.affixed = affix                                                                                              // 1892\n    this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null                                                    // 1893\n                                                                                                                      // 1894\n    this.$element                                                                                                     // 1895\n      .removeClass(Affix.RESET)                                                                                       // 1896\n      .addClass(affixType)                                                                                            // 1897\n      .trigger($.Event(affixType.replace('affix', 'affixed')))                                                        // 1898\n                                                                                                                      // 1899\n    if (affix == 'bottom') {                                                                                          // 1900\n      this.$element.offset({ top: scrollHeight - offsetBottom - this.$element.height() })                             // 1901\n    }                                                                                                                 // 1902\n  }                                                                                                                   // 1903\n                                                                                                                      // 1904\n                                                                                                                      // 1905\n  // AFFIX PLUGIN DEFINITION                                                                                          // 1906\n  // =======================                                                                                          // 1907\n                                                                                                                      // 1908\n  var old = $.fn.affix                                                                                                // 1909\n                                                                                                                      // 1910\n  $.fn.affix = function (option) {                                                                                    // 1911\n    return this.each(function () {                                                                                    // 1912\n      var $this   = $(this)                                                                                           // 1913\n      var data    = $this.data('bs.affix')                                                                            // 1914\n      var options = typeof option == 'object' && option                                                               // 1915\n                                                                                                                      // 1916\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))                                            // 1917\n      if (typeof option == 'string') data[option]()                                                                   // 1918\n    })                                                                                                                // 1919\n  }                                                                                                                   // 1920\n                                                                                                                      // 1921\n  $.fn.affix.Constructor = Affix                                                                                      // 1922\n                                                                                                                      // 1923\n                                                                                                                      // 1924\n  // AFFIX NO CONFLICT                                                                                                // 1925\n  // =================                                                                                                // 1926\n                                                                                                                      // 1927\n  $.fn.affix.noConflict = function () {                                                                               // 1928\n    $.fn.affix = old                                                                                                  // 1929\n    return this                                                                                                       // 1930\n  }                                                                                                                   // 1931\n                                                                                                                      // 1932\n                                                                                                                      // 1933\n  // AFFIX DATA-API                                                                                                   // 1934\n  // ==============                                                                                                   // 1935\n                                                                                                                      // 1936\n  $(window).on('load', function () {                                                                                  // 1937\n    $('[data-spy=\"affix\"]').each(function () {                                                                        // 1938\n      var $spy = $(this)                                                                                              // 1939\n      var data = $spy.data()                                                                                          // 1940\n                                                                                                                      // 1941\n      data.offset = data.offset || {}                                                                                 // 1942\n                                                                                                                      // 1943\n      if (data.offsetBottom) data.offset.bottom = data.offsetBottom                                                   // 1944\n      if (data.offsetTop)    data.offset.top    = data.offsetTop                                                      // 1945\n                                                                                                                      // 1946\n      $spy.affix(data)                                                                                                // 1947\n    })                                                                                                                // 1948\n  })                                                                                                                  // 1949\n                                                                                                                      // 1950\n}(jQuery);                                                                                                            // 1951\n                                                                                                                      // 1952\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}