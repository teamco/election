[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nRoles = Package['alanning:roles'].Roles;\nmoment = Package['momentjs:moment'].moment;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nAccounts = Package['accounts-base'].Accounts;\nAccountsServer = Package['accounts-base'].AccountsServer;\nServerMessages = Package['gfk:server-messages'].ServerMessages;\nGravatar = Package['jparker:gravatar'].Gravatar;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/model/account_profile.js                                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nAccountProfile = new Mongo.Collection('account_profiles');             // 1\n                                                                       //\nMeteor.methods({                                                       // 3\n    account_profile: function () {                                     // 4\n        return {                                                       // 5\n            create: function (account, opts) {                         // 6\n                AccountProfile.insert({                                // 7\n                    user_id: account._id,                              // 8\n                    firstName: opts.firstName,                         // 9\n                    middleName: opts.middleName,                       // 10\n                    lastName: opts.lastName,                           // 11\n                    birthday: opts.birthday,                           // 12\n                    address: opts.address                              // 13\n                });                                                    //\n            },                                                         //\n            update: function () {},                                    // 16\n            destroy: function () {}                                    // 19\n        };                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/model/account_profile.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/model/account_profile.js"],"names":[],"mappings":";;;;;;;;AAAA,cAAc,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;;AAE1D,MAAM,CAAC,OAAO,CAAC;AACX,mBAAe,EAAE,YAAY;AACzB,eAAO;AACH,kBAAM,EAAE,UAAU,OAAO,EAAE,IAAI,EAAE;AAC7B,8BAAc,CAAC,MAAM,CAAC;AAClB,2BAAO,EAAE,OAAO,CAAC,GAAG;AACpB,6BAAS,EAAE,IAAI,CAAC,SAAS;AACzB,8BAAU,EAAE,IAAI,CAAC,UAAU;AAC3B,4BAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,4BAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,2BAAO,EAAE,IAAI,CAAC,OAAO;iBACxB,CAAC,CAAC;aACN;AACD,kBAAM,EAAE,YAAY,EAEnB;AACD,mBAAO,EAAE,YAAY,EAEpB;SACJ;KACJ;CACJ,CAAC,CAAC,sE","file":"/lib/model/account_profile.js","sourcesContent":["AccountProfile = new Mongo.Collection('account_profiles');\n\nMeteor.methods({\n    account_profile: function () {\n        return {\n            create: function (account, opts) {\n                AccountProfile.insert({\n                    user_id: account._id,\n                    firstName: opts.firstName,\n                    middleName: opts.middleName,\n                    lastName: opts.lastName,\n                    birthday: opts.birthday,\n                    address: opts.address\n                });\n            },\n            update: function () {\n\n            },\n            destroy: function () {\n\n            }\n        }\n    }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/model/campaign.js                                               //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCampaign = new Mongo.Collection('campaigns');                          // 1\n                                                                       //\nCampaign.allow({                                                       // 3\n    insert: function (user_uuid, doc) {                                // 4\n        return doc.user_uuid === user_uuid;                            // 5\n    }                                                                  //\n});                                                                    //\n                                                                       //\nCampaign.latest = function () {                                        // 9\n    return Campaign.find({}, { sort: { date: -1 }, limit: 1 });        // 10\n};                                                                     //\n                                                                       //\nMeteor.methods({                                                       // 13\n    campaigns: function () {                                           // 14\n        return {                                                       // 15\n            create: function () {},                                    // 16\n            update: function () {},                                    // 18\n            destroy: function () {}                                    // 21\n        };                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/model/campaign.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/model/campaign.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;;AAE7C,QAAQ,CAAC,KAAK,CAAC;AACX,UAAM,EAAE,UAAU,SAAS,EAAE,GAAG,EAAE;AAC9B,eAAO,GAAG,CAAC,SAAS,KAAK,SAAS,CAAC;KACtC;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,MAAM,GAAG,YAAY;AAC1B,WAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAC,IAAI,EAAE,EAAC,IAAI,EAAE,CAAC,CAAC,EAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;CAC1D,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC;AACX,aAAS,EAAE,YAAY;AACnB,eAAO;AACH,kBAAM,EAAE,YAAY,EACnB;AACD,kBAAM,EAAE,YAAY,EAEnB;AACD,mBAAO,EAAE,YAAY,EAEpB;SACJ;KACJ;CACJ,CAAC,CAAC,sE","file":"/lib/model/campaign.js","sourcesContent":["Campaign = new Mongo.Collection('campaigns');\n\nCampaign.allow({\n    insert: function (user_uuid, doc) {\n        return doc.user_uuid === user_uuid;\n    }\n});\n\nCampaign.latest = function () {\n    return Campaign.find({}, {sort: {date: -1}, limit: 1});\n};\n\nMeteor.methods({\n    campaigns: function () {\n        return {\n            create: function () {\n            },\n            update: function () {\n\n            },\n            destroy: function () {\n\n            }\n        }\n    }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/router.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nRouter.configure({                                                     // 1\n    // we use the  appBody template to define the layout for the entire app\n    layoutTemplate: 'appBody',                                         // 3\n                                                                       //\n    // the appNotFound template is used for unknown routes and missing lists\n    notFoundTemplate: 'appNotFound',                                   // 6\n                                                                       //\n    progress: true,                                                    // 8\n                                                                       //\n    // wait on the following subscriptions before rendering the page to ensure\n    // the data it's expecting is present                              //\n    waitOn: function () {                                              // 12\n        return [Meteor.subscribe('userData')                           // 13\n        //Meteor.subscribe('adminApp'),                                //\n        //Meteor.subscribe('publicApp'),                               //\n        //Meteor.subscribe('privateApp')                               //\n        ];                                                             //\n    }                                                                  //\n});                                                                    //\n                                                                       //\ndataReadyHold = null;                                                  // 22\n                                                                       //\nif (Meteor.isClient) {                                                 // 24\n    // Keep showing the launch screen on mobile devices until we have loaded\n    // the app's data                                                  //\n    dataReadyHold = LaunchScreen.hold();                               // 27\n}                                                                      //\n                                                                       //\nRouter.onBeforeAction(function () {                                    // 30\n    if (!Meteor.userId()) {                                            // 31\n        this.render('login');                                          // 32\n    } else {                                                           //\n        this.next();                                                   // 34\n    }                                                                  //\n});                                                                    //\n                                                                       //\nRouter.route('/', function () {                                        // 38\n    this.render('Index');                                              // 39\n});                                                                    //\n                                                                       //\nRouter.route('/users', function () {                                   // 42\n    this.render('userData');                                           // 43\n    Template.userData.__helpers.get('hideModal')();                    // 44\n});                                                                    //\n                                                                       //\nRouter.route('/users/:id', function () {                               // 47\n    this.render('userData');                                           // 48\n    Template.userData.__helpers.get('showModal')(this.params.id);      // 49\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/router.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/router.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,SAAS,CAAC;;AAEb,kBAAc,EAAE,SAAS;;;AAGzB,oBAAgB,EAAE,aAAa;;AAE/B,YAAQ,EAAE,IAAI;;;;AAId,UAAM,EAAE,YAAY;AAChB,eAAO,CACH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;;;;SAI/B,CAAC;KACL;CACJ,CAAC,CAAC;;AAEH,aAAa,GAAG,IAAI,CAAC;;AAErB,IAAI,MAAM,CAAC,QAAQ,EAAE;;;AAGjB,iBAAa,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC;CACvC;;AAED,MAAM,CAAC,cAAc,CAAC,YAAY;AAC9B,QAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;AAClB,YAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACxB,MAAM;AACH,YAAI,CAAC,IAAI,EAAE,CAAC;KACf;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY;AAC1B,QAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;CACxB,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY;AAC/B,QAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACxB,YAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC;CAClD,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,YAAY;AACnC,QAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACxB,YAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;CAChE,CAAC,CAAC,sE","file":"/lib/router.js","sourcesContent":["Router.configure({\n    // we use the  appBody template to define the layout for the entire app\n    layoutTemplate: 'appBody',\n\n    // the appNotFound template is used for unknown routes and missing lists\n    notFoundTemplate: 'appNotFound',\n\n    progress: true,\n\n    // wait on the following subscriptions before rendering the page to ensure\n    // the data it's expecting is present\n    waitOn: function () {\n        return [\n            Meteor.subscribe('userData')\n            //Meteor.subscribe('adminApp'),\n            //Meteor.subscribe('publicApp'),\n            //Meteor.subscribe('privateApp')\n        ];\n    }\n});\n\ndataReadyHold = null;\n\nif (Meteor.isClient) {\n    // Keep showing the launch screen on mobile devices until we have loaded\n    // the app's data\n    dataReadyHold = LaunchScreen.hold();\n}\n\nRouter.onBeforeAction(function () {\n    if (!Meteor.userId()) {\n        this.render('login');\n    } else {\n        this.next();\n    }\n});\n\nRouter.route('/', function () {\n    this.render('Index');\n});\n\nRouter.route('/users', function () {\n    this.render('userData');\n    Template.userData.__helpers.get('hideModal')();\n});\n\nRouter.route('/users/:id', function () {\n    this.render('userData');\n    Template.userData.__helpers.get('showModal')(this.params.id);\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/shared_config.js                                                //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nserverMessages = new ServerMessages();                                 // 1\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/shared_config.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/shared_config.js"],"names":[],"mappings":";;;;;;;;AAAA,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC,qC","file":"/lib/shared_config.js","sourcesContent":["serverMessages = new ServerMessages();"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/calendar/calendar.js                                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCalEvent = new Mongo.Collection('calevent');                           // 1\n                                                                       //\nCalEvent.allow({                                                       // 3\n    insert: function (user_uuid, doc) {                                // 4\n        debugger;                                                      // 4\n        return doc.user_uuid === user_uuid;                            // 5\n    }                                                                  //\n});                                                                    //\nif (Meteor.isServer) {                                                 // 8\n    Meteor.startup(function () {                                       // 9\n        Meteor.methods({                                               // 10\n            'saveCalEvent': function (ce) {                            // 11\n                debugger;                                              // 11\n                CalEvent.insert(ce);                                   // 12\n            },                                                         //\n            'updateTitle': function (id, title) {                      // 14\n                debugger;                                              // 14\n                return CalEvent.update({ _id: id }, { $set: { title: title } });\n            },                                                         //\n            'moveEvent': function (reqEvent) {                         // 17\n                debugger;                                              // 17\n                return CalEvent.update({ _id: reqEvent._id }, {        // 18\n                    $set: {                                            // 19\n                        start: reqEvent.start,                         // 20\n                        end: reqEvent.end                              // 21\n                    }                                                  //\n                });                                                    //\n            }                                                          //\n        });                                                            //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/calendar/calendar.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/calendar/calendar.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;AAE5C,QAAQ,CAAC,KAAK,CAAC;AACX,UAAM,EAAE,UAAU,SAAS,EAAE,GAAG,EAAE;AAAC,iBAAS;AACxC,eAAO,GAAG,CAAC,SAAS,KAAK,SAAS,CAAC;KACtC;CACJ,CAAC,CAAC;AACH,IAAI,MAAM,CAAC,QAAQ,EAAE;AACjB,UAAM,CAAC,OAAO,CAAC,YAAY;AACvB,cAAM,CAAC,OAAO,CAAC;AACX,0BAAc,EAAE,UAAU,EAAE,EAAE;AAAC,yBAAS;AACpC,wBAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aACvB;AACD,yBAAa,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE;AAAC,yBAAQ;AACzC,uBAAO,QAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC;aAC7D;AACD,uBAAW,EAAE,UAAU,QAAQ,EAAE;AAAC,yBAAQ;AACtC,uBAAO,QAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAC,EAAE;AACxC,wBAAI,EAAE;AACF,6BAAK,EAAE,QAAQ,CAAC,KAAK;AACrB,2BAAG,EAAE,QAAQ,CAAC,GAAG;qBACpB;iBACJ,CAAC;aACL;SACJ,CAAC;KACL,CAAC,CAAC;CACN,wE","file":"/server/calendar/calendar.js","sourcesContent":["CalEvent = new Mongo.Collection('calevent');\n\nCalEvent.allow({\n    insert: function (user_uuid, doc) {debugger;\n        return doc.user_uuid === user_uuid;\n    }\n});\nif (Meteor.isServer) {\n    Meteor.startup(function () {\n        Meteor.methods({\n            'saveCalEvent': function (ce) {debugger;\n                CalEvent.insert(ce);\n            },\n            'updateTitle': function (id, title) {debugger\n                return CalEvent.update({_id: id}, {$set: {title: title}});\n            },\n            'moveEvent': function (reqEvent) {debugger\n                return CalEvent.update({_id: reqEvent._id}, {\n                    $set: {\n                        start: reqEvent.start,\n                        end: reqEvent.end\n                    }\n                })\n            }\n        })\n    });\n}"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/campaigns/campaigns.js                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/campaigns/campaigns.js","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","file":"/server/campaigns/campaigns.js"}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/candidates/candidates.js                                     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCandidate = new Meteor.Collection('candidates');                       // 1\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/candidates/candidates.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/candidates/candidates.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,2B","file":"/server/candidates/candidates.js","sourcesContent":["Candidate = new Meteor.Collection('candidates');\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/content/content.js                                           //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nContent = new Meteor.Collection('content');                            // 1\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/content/content.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/content/content.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,gC","file":"/server/content/content.js","sourcesContent":["Content = new Meteor.Collection('content');\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/parries/parries.js                                           //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nParries = new Meteor.Collection('parries');                            // 1\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/parries/parries.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/parries/parries.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,gC","file":"/server/parries/parries.js","sourcesContent":["Parries = new Meteor.Collection('parries');"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/sites/sites.js                                               //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nSites = new Meteor.Collection('sites');                                // 1\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/sites/sites.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/sites/sites.js"],"names":[],"mappings":";;;;;;;;AAAA,KAAK,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,oC","file":"/server/sites/sites.js","sourcesContent":["Sites = new Meteor.Collection('sites');"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/_settings.js                                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// Provide defaults for Meteor.settings                                //\n//                                                                     //\n// To configure your own Twitter keys, see:                            //\n//   https://github.com/meteor/meteor/wiki/Configuring-Twitter-in-Local-Market\nif (typeof Meteor.settings === 'undefined') Meteor.settings = {};      // 5\n                                                                       //\n_.defaults(Meteor.settings, {                                          // 8\n    facebook: {                                                        // 9\n        appId: '1472927183016726',                                     // 10\n        secret: '57fc9f9efe160b8d2ceebc2de06db5ff'                     // 11\n    }                                                                  //\n});                                                                    //\n                                                                       //\nServiceConfiguration.configurations.upsert({ service: \"facebook\" }, {  // 15\n    $set: {                                                            // 18\n        appId: Meteor.settings.facebook.appId,                         // 19\n        secret: Meteor.settings.facebook.secret                        // 20\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/_settings.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/_settings.js"],"names":[],"mappings":";;;;;;;;;;;;AAIA,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,EACtC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;;AAEzB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;AACxB,YAAQ,EAAE;AACN,aAAK,EAAE,kBAAkB;AACzB,cAAM,EAAE,kCAAkC;KAC7C;CACJ,CAAC,CAAC;;AAEH,oBAAoB,CAAC,cAAc,CAAC,MAAM,CACtC,EAAC,OAAO,EAAE,UAAU,EAAC,EACrB;AACI,QAAI,EAAE;AACF,aAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;AACrC,cAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM;KAC1C;CACJ,CACJ,CAAC,sE","file":"/server/_settings.js","sourcesContent":["// Provide defaults for Meteor.settings\n//\n// To configure your own Twitter keys, see:\n//   https://github.com/meteor/meteor/wiki/Configuring-Twitter-in-Local-Market\nif (typeof Meteor.settings === 'undefined')\n    Meteor.settings = {};\n\n_.defaults(Meteor.settings, {\n    facebook: {\n        appId: '1472927183016726',\n        secret: '57fc9f9efe160b8d2ceebc2de06db5ff'\n    }\n});\n\nServiceConfiguration.configurations.upsert(\n    {service: \"facebook\"},\n    {\n        $set: {\n            appId: Meteor.settings.facebook.appId,\n            secret: Meteor.settings.facebook.secret\n        }\n    }\n);"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/accounts.js                                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nAccounts.onCreateUser(function (options, user) {                       // 1\n                                                                       //\n    var provider = Object.keys(user.services).shift() || '';           // 3\n    var auth = getProviderInfo(provider, user);                        // 4\n                                                                       //\n    options = options || {};                                           // 6\n    options.profile = options.profile || {};                           // 7\n                                                                       //\n    options.profile.picture = auth.picture;                            // 9\n    options.profile.provider = provider;                               // 10\n    options.profile.email = auth.email;                                // 11\n    options.profile.link = auth.link;                                  // 12\n    options.profile.createdAt = user.createdAt;                        // 13\n    options.profile.updatedAt = user.createdAt;                        // 14\n    user.profile = options.profile;                                    // 15\n                                                                       //\n    return user;                                                       // 17\n});                                                                    //\n                                                                       //\nMeteor.users.allow({                                                   // 20\n    fetch: ['owner'],                                                  // 21\n    insert: function (_id, user) {                                     // 22\n        return _id === user._id;                                       // 23\n    },                                                                 //\n    update: function (_id, user) {                                     // 25\n        return _id === user._id;                                       // 26\n    },                                                                 //\n    remove: function (_id, user) {                                     // 28\n        return _id === user._id;                                       // 29\n    }                                                                  //\n});                                                                    //\n                                                                       //\nfunction getProviderInfo(provider, user) {                             // 33\n                                                                       //\n    var opts = {},                                                     // 35\n        info = user.services[provider];                                //\n                                                                       //\n    switch (provider) {                                                // 38\n        case 'facebook':                                               // 39\n            opts = {                                                   // 40\n                email: info.email,                                     // 41\n                picture: 'http://graph.facebook.com/' + info.id + '/picture/?type=small',\n                link: info.link                                        // 43\n            };                                                         //\n            break;                                                     // 45\n        case 'github':                                                 // 46\n            opts = {                                                   // 47\n                email: info.email,                                     // 48\n                link: ''                                               // 49\n            };                                                         //\n            break;                                                     // 51\n        case 'google':                                                 // 52\n            opts = {                                                   // 53\n                email: info.email,                                     // 54\n                link: ''                                               // 55\n            };                                                         //\n            break;                                                     // 57\n        case 'twitter':                                                // 58\n            opts = {                                                   // 59\n                email: info.screenName,                                // 60\n                link: ''                                               // 61\n            };                                                         //\n            break;                                                     // 63\n        default:                                                       // 64\n            opts = {                                                   // 65\n                email: user.emails[0].address,                         // 66\n                link: '/users/' + user._id                             // 67\n            };                                                         //\n            break;                                                     // 69\n    }                                                                  // 69\n                                                                       //\n    if (!opts.picture) {                                               // 72\n        opts.picture = Gravatar.imageUrl(opts.email, {});              // 73\n    }                                                                  //\n                                                                       //\n    return opts;                                                       // 76\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/accounts.js","sourceMap":{"version":3,"sources":["/server/accounts.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,CAAC,YAAY,CAAC,UAAU,OAAO,EAAE,IAAI,EAAE;;AAE3C,QAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;AACxD,QAAI,IAAI,GAAG,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;AAE3C,WAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,WAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;;AAExC,WAAO,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACvC,WAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACpC,WAAO,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACnC,WAAO,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACjC,WAAO,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,WAAO,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;;AAE/B,WAAO,IAAI,CAAC;CACf,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AACf,SAAK,EAAE,CAAC,OAAO,CAAC;AAChB,UAAM,EAAE,UAAU,GAAG,EAAE,IAAI,EAAE;AACzB,eAAO,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;KAC3B;AACD,UAAM,EAAE,UAAU,GAAG,EAAE,IAAI,EAAE;AACzB,eAAO,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;KAC3B;AACD,UAAM,EAAE,UAAU,GAAG,EAAE,IAAI,EAAE;AACzB,eAAO,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;KAC3B;CACJ,CAAC,CAAC;;AAEH,SAAS,eAAe,CAAC,QAAQ,EAAE,IAAI,EAAE;;AAErC,QAAI,IAAI,GAAG,EAAE;QACT,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;AAEnC,YAAQ,QAAQ;AACZ,aAAK,UAAU;AACX,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,uBAAO,EAAE,4BAA4B,GAAG,IAAI,CAAC,EAAE,GAAG,sBAAsB;AACxE,oBAAI,EAAE,IAAI,CAAC,IAAI;aAClB,CAAC;AACF,kBAAM;AACV,aAAK,QAAQ;AACT,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,oBAAI,EAAE,EAAE;aACX,CAAC;AACF,kBAAM;AACV,aAAK,QAAQ;AACT,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,oBAAI,EAAE,EAAE;aACX,CAAC;AACF,kBAAM;AACV,aAAK,SAAS;AACV,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,UAAU;AACtB,oBAAI,EAAE,EAAE;aACX,CAAC;AACF,kBAAM;AACV;AACI,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO;AAC7B,oBAAI,EAAE,SAAS,GAAG,IAAI,CAAC,GAAG;aAC7B,CAAC;AACF,kBAAM;AAAA,KACb;;AAED,QAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACf,YAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KACpD;;AAED,WAAO,IAAI,CAAC;CACf,wE","file":"/server/accounts.js","sourcesContent":["Accounts.onCreateUser(function (options, user) {\n\n    var provider = Object.keys(user.services).shift() || '';\n    var auth = getProviderInfo(provider, user);\n\n    options = options || {};\n    options.profile = options.profile || {};\n\n    options.profile.picture = auth.picture;\n    options.profile.provider = provider;\n    options.profile.email = auth.email;\n    options.profile.link = auth.link;\n    options.profile.createdAt = user.createdAt;\n    options.profile.updatedAt = user.createdAt;\n    user.profile = options.profile;\n\n    return user;\n});\n\nMeteor.users.allow({\n    fetch: ['owner'],\n    insert: function (_id, user) {\n        return _id === user._id;\n    },\n    update: function (_id, user) {\n        return _id === user._id;\n    },\n    remove: function (_id, user) {\n        return _id === user._id;\n    }\n});\n\nfunction getProviderInfo(provider, user) {\n\n    var opts = {},\n        info = user.services[provider];\n\n    switch (provider) {\n        case 'facebook':\n            opts = {\n                email: info.email,\n                picture: 'http://graph.facebook.com/' + info.id + '/picture/?type=small',\n                link: info.link\n            };\n            break;\n        case 'github':\n            opts = {\n                email: info.email,\n                link: ''\n            };\n            break;\n        case 'google':\n            opts = {\n                email: info.email,\n                link: ''\n            };\n            break;\n        case 'twitter':\n            opts = {\n                email: info.screenName,\n                link: ''\n            };\n            break;\n        default:\n            opts = {\n                email: user.emails[0].address,\n                link: '/users/' + user._id\n            };\n            break;\n    }\n\n    if (!opts.picture) {\n        opts.picture = Gravatar.imageUrl(opts.email, {});\n    }\n\n    return opts;\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/accounts_ui.js                                               //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nif (!Accounts.ui) {                                                    // 1\n    Accounts.ui = {};                                                  // 2\n}                                                                      //\n                                                                       //\nif (!Accounts.ui._options) {                                           // 5\n    Accounts.ui._options = {                                           // 6\n        extraSignupFields: [],                                         // 7\n        requestPermissions: {},                                        // 8\n        requestOfflineToken: {},                                       // 9\n        forceApprovalPrompt: {},                                       // 10\n        forceEmailLowercase: false,                                    // 11\n        forceUsernameLowercase: false,                                 // 12\n        forcePasswordLowercase: false                                  // 13\n    };                                                                 //\n}                                                                      //\n                                                                       //\nAccounts.ui.navigate = function (route, hash) {                        // 17\n    // if router is iron-router                                        //\n    if (window.Router && _.isFunction(Router.go)) {                    // 19\n        Router.go(route, hash);                                        // 20\n    }                                                                  //\n};                                                                     //\n                                                                       //\nAccounts.ui.config = function (options) {                              // 24\n    // validate options keys                                           //\n    var VALID_KEYS = ['passwordSignupFields', 'extraSignupFields', 'forceEmailLowercase', 'forceUsernameLowercase', 'forcePasswordLowercase', 'requestPermissions', 'requestOfflineToken', 'forceApprovalPrompt'];\n                                                                       //\n    _.each(_.keys(options), function (key) {                           // 29\n        if (!_.contains(VALID_KEYS, key)) {                            // 30\n            throw new Error(\"Accounts.ui.config: Invalid key: \" + key);\n        }                                                              //\n    });                                                                //\n                                                                       //\n    options.extraSignupFields = options.extraSignupFields || [];       // 35\n                                                                       //\n    // deal with `passwordSignupFields`                                //\n    if (options.passwordSignupFields) {                                // 38\n        if (_.contains([\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\", \"EMAIL_ONLY\"], options.passwordSignupFields)) {\n            if (Accounts.ui._options.passwordSignupFields) {           // 46\n                throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n            } else {                                                   //\n                Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n            }                                                          //\n        } else {                                                       //\n            throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\n        }                                                              //\n    }                                                                  //\n                                                                       //\n    Accounts.ui._options.forceEmailLowercase = options.forceEmailLowercase;\n    Accounts.ui._options.forceUsernameLowercase = options.forceUsernameLowercase;\n    Accounts.ui._options.forcePasswordLowercase = options.forcePasswordLowercase;\n                                                                       //\n    // deal with `requestPermissions`                                  //\n    if (options.requestPermissions) {                                  // 61\n        _.each(options.requestPermissions, function (scope, service) {\n            if (Accounts.ui._options.requestPermissions[service]) {    // 63\n                throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\n            } else if (!(scope instanceof Array)) {                    //\n                throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n            } else {                                                   //\n                Accounts.ui._options.requestPermissions[service] = scope;\n            }                                                          //\n        });                                                            //\n    }                                                                  //\n    if (typeof options.extraSignupFields !== 'object' || !options.extraSignupFields instanceof Array) {\n        throw new Error(\"Accounts.ui.config: `extraSignupFields` must be an array.\");\n    } else {                                                           //\n        if (options.extraSignupFields) {                               // 75\n            _.each(options.extraSignupFields, function (field, index) {\n                if (!field.fieldName || !field.fieldLabel) {           // 77\n                    throw new Error(\"Accounts.ui.config: `extraSignupFields` objects must have `fieldName` and `fieldLabel` attributes.\");\n                }                                                      //\n                if (typeof field.visible === 'undefined') {            // 80\n                    field.visible = true;                              // 81\n                }                                                      //\n                Accounts.ui._options.extraSignupFields[index] = field;\n            });                                                        //\n        }                                                              //\n    }                                                                  //\n                                                                       //\n    // deal with `requestOfflineToken`                                 //\n    if (options.requestOfflineToken) {                                 // 89\n        _.each(options.requestOfflineToken, function (value, service) {\n            if (service !== 'google') {                                // 91\n                throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n            }                                                          //\n            if (Accounts.ui._options.requestOfflineToken[service]) {   // 94\n                throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);\n            } else {                                                   //\n                Accounts.ui._options.requestOfflineToken[service] = value;\n            }                                                          //\n        });                                                            //\n    }                                                                  //\n                                                                       //\n    // deal with `forceApprovalPrompt`                                 //\n    if (options.forceApprovalPrompt) {                                 // 103\n        _.each(options.forceApprovalPrompt, function (value, service) {\n            if (service !== 'google') {                                // 105\n                throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");\n            }                                                          //\n            if (Accounts.ui._options.forceApprovalPrompt[service]) {   // 108\n                throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \" + service);\n            } else {                                                   //\n                Accounts.ui._options.forceApprovalPrompt[service] = value;\n            }                                                          //\n        });                                                            //\n    }                                                                  //\n};                                                                     //\n                                                                       //\nAccounts.ui._passwordSignupFields = function () {                      // 117\n    return Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY\";  // 118\n};                                                                     //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/accounts_ui.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/accounts_ui.js"],"names":[],"mappings":"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","file":"/server/accounts_ui.js","sourcesContent":["if (!Accounts.ui) {\n    Accounts.ui = {};\n}\n\nif (!Accounts.ui._options) {\n    Accounts.ui._options = {\n        extraSignupFields: [],\n        requestPermissions: {},\n        requestOfflineToken: {},\n        forceApprovalPrompt: {},\n        forceEmailLowercase: false,\n        forceUsernameLowercase: false,\n        forcePasswordLowercase: false\n    };\n}\n\nAccounts.ui.navigate = function (route, hash) {\n    // if router is iron-router\n    if (window.Router && _.isFunction(Router.go)) {\n        Router.go(route, hash);\n    }\n}\n\nAccounts.ui.config = function (options) {\n    // validate options keys\n    var VALID_KEYS = ['passwordSignupFields', 'extraSignupFields', 'forceEmailLowercase', 'forceUsernameLowercase', 'forcePasswordLowercase',\n        'requestPermissions', 'requestOfflineToken', 'forceApprovalPrompt'];\n\n    _.each(_.keys(options), function (key) {\n        if (!_.contains(VALID_KEYS, key)) {\n            throw new Error(\"Accounts.ui.config: Invalid key: \" + key);\n        }\n    });\n\n    options.extraSignupFields = options.extraSignupFields || [];\n\n    // deal with `passwordSignupFields`\n    if (options.passwordSignupFields) {\n        if (_.contains([\n                \"USERNAME_AND_EMAIL_CONFIRM\",\n                \"USERNAME_AND_EMAIL\",\n                \"USERNAME_AND_OPTIONAL_EMAIL\",\n                \"USERNAME_ONLY\",\n                \"EMAIL_ONLY\"\n            ], options.passwordSignupFields)) {\n            if (Accounts.ui._options.passwordSignupFields) {\n                throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n            } else {\n                Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n            }\n        } else {\n            throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\n        }\n    }\n\n    Accounts.ui._options.forceEmailLowercase = options.forceEmailLowercase;\n    Accounts.ui._options.forceUsernameLowercase = options.forceUsernameLowercase;\n    Accounts.ui._options.forcePasswordLowercase = options.forcePasswordLowercase;\n\n    // deal with `requestPermissions`\n    if (options.requestPermissions) {\n        _.each(options.requestPermissions, function (scope, service) {\n            if (Accounts.ui._options.requestPermissions[service]) {\n                throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\n            } else if (!(scope instanceof Array)) {\n                throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n            } else {\n                Accounts.ui._options.requestPermissions[service] = scope;\n            }\n        });\n    }\n    if (typeof options.extraSignupFields !== 'object' || !options.extraSignupFields instanceof Array) {\n        throw new Error(\"Accounts.ui.config: `extraSignupFields` must be an array.\");\n    } else {\n        if (options.extraSignupFields) {\n            _.each(options.extraSignupFields, function (field, index) {\n                if (!field.fieldName || !field.fieldLabel) {\n                    throw new Error(\"Accounts.ui.config: `extraSignupFields` objects must have `fieldName` and `fieldLabel` attributes.\");\n                }\n                if (typeof field.visible === 'undefined') {\n                    field.visible = true;\n                }\n                Accounts.ui._options.extraSignupFields[index] = field;\n            });\n        }\n    }\n\n    // deal with `requestOfflineToken`\n    if (options.requestOfflineToken) {\n        _.each(options.requestOfflineToken, function (value, service) {\n            if (service !== 'google') {\n                throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n            }\n            if (Accounts.ui._options.requestOfflineToken[service]) {\n                throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);\n            } else {\n                Accounts.ui._options.requestOfflineToken[service] = value;\n            }\n        });\n    }\n\n    // deal with `forceApprovalPrompt`\n    if (options.forceApprovalPrompt) {\n        _.each(options.forceApprovalPrompt, function (value, service) {\n            if (service !== 'google') {\n                throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");\n            }\n            if (Accounts.ui._options.forceApprovalPrompt[service]) {\n                throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \" + service);\n            } else {\n                Accounts.ui._options.forceApprovalPrompt[service] = value;\n            }\n        });\n    }\n};\n\nAccounts.ui._passwordSignupFields = function () {\n    return Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY\";\n};\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/bootstrap.js                                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// if the database is empty on server start, create some sample data.  //\nMeteor.startup(function () {});                                        // 2\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/bootstrap.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/bootstrap.js"],"names":[],"mappings":";;;;;;;;;AACA,MAAM,CAAC,OAAO,CAAC,YAAY,EAE1B,CAAC,CAAC,4C","file":"/server/bootstrap.js","sourcesContent":["// if the database is empty on server start, create some sample data.\nMeteor.startup(function () {\n\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/notification.js                                              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMeteor.methods({                                                       // 1\n    notify: function () {                                              // 2\n        serverMessages.notify.apply(serverMessages, arguments);        // 3\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/notification.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/notification.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC;AACX,UAAM,EAAE,YAAY;AAChB,sBAAc,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;KAC1D;CACJ,CAAC,CAAC,sE","file":"/server/notification.js","sourcesContent":["Meteor.methods({\n    notify: function () {\n        serverMessages.notify.apply(serverMessages, arguments);\n    }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/publish.js                                                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMeteor.publish('adminApp', function () {});                            // 1\n                                                                       //\nMeteor.publish('publicApp', function () {});                           // 4\n                                                                       //\nMeteor.publish('privateApp', function () {});                          // 7\n                                                                       //\nMeteor.publish(\"userData\", function () {                               // 10\n    if (this.userId) {                                                 // 11\n        return Meteor.users.find({ _id: this.userId }, { fields: { 'other': 1, 'things': 1 } });\n    } else {                                                           //\n        this.ready();                                                  // 15\n    }                                                                  //\n});                                                                    //\n                                                                       //\nMeteor.publish('events', function (start, end) {                       // 19\n    return Events.find();                                              // 20\n    /*{                                                                //\n     $and: [                                                           //\n     {date: {$gte: start}},                                            //\n     {date: {$lte: end}}                                               //\n     ]                                                                 //\n     });                                                               //\n     */                                                                //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/publish.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/publish.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,EACtC,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,EACvC,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,YAAY,EACxC,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY;AACnC,QAAI,IAAI,CAAC,MAAM,EAAE;AACb,eAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAC,EACvC,EAAC,MAAM,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC;KAC5C,MAAM;AACH,YAAI,CAAC,KAAK,EAAE,CAAC;KAChB;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,KAAK,EAAE,GAAG,EAAE;AAC3C,WAAO,MAAM,CAAC,IAAI,EAAE,CAAC;;;;;;;;CAQxB,CAAC,CAAC,sE","file":"/server/publish.js","sourcesContent":["Meteor.publish('adminApp', function () {\n});\n\nMeteor.publish('publicApp', function () {\n});\n\nMeteor.publish('privateApp', function () {\n});\n\nMeteor.publish(\"userData\", function () {\n    if (this.userId) {\n        return Meteor.users.find({_id: this.userId},\n            {fields: {'other': 1, 'things': 1}});\n    } else {\n        this.ready();\n    }\n});\n\nMeteor.publish('events', function (start, end) {\n    return Events.find();\n    /*{\n     $and: [\n     {date: {$gte: start}},\n     {date: {$lte: end}}\n     ]\n     });\n     */\n});"]}}]