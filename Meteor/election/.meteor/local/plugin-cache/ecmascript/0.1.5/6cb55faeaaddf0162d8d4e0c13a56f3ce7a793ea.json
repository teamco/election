{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Accounts.onCreateUser(function (options, user) {\n    debugger;\n    var provider = Object.keys(user.services).shift() || '';\n    var auth = getProviderInfo(provider, user);\n\n    options = options || {};\n    options.profile = options.profile || {};\n\n    options.profile.picture = auth.picture;\n    options.profile.provider = provider;\n    options.profile.email = auth.email;\n    options.profile.link = auth.link;\n    options.profile.createdAt = user.createdAt;\n    options.profile.updatedAt = user.createdAt;\n    user.profile = options.profile;\n\n    return user;\n});\n\nMeteor.users.allow({\n    insert: function (_id, user) {\n        return _id === user._id;\n    },\n    update: function (_id, user) {\n        return _id === user._id;\n    },\n    remove: function (_id, user) {\n        return _id === user._id;\n    }\n});\n\nfunction getProviderInfo(provider, user) {\n\n    var opts = {},\n        info = user.services[provider];\n\n    switch (provider) {\n        case 'facebook':\n            opts = {\n                email: info.email,\n                picture: 'http://graph.facebook.com/' + info.id + '/picture/?type=small',\n                link: info.link\n            };\n            break;\n        case 'github':\n            opts = {\n                email: info.email,\n                picture: '',\n                link: ''\n            };\n            break;\n        case 'google':\n            opts = {\n                email: info.email,\n                picture: '',\n                link: ''\n            };\n            break;\n        case 'twitter':\n            opts = {\n                email: info.screenName,\n                picture: '',\n                link: ''\n            };\n            break;\n        default:\n            var email = user.emails[0].address;\n            opts = {\n                email: email,\n                picture: Gravatar.imageUrl(email, {})\n            };\n            break;\n    }\n\n    return opts;\n}","ast":null,"map":{"version":3,"sources":["/server/accounts.js"],"names":[],"mappings":"AAAA,QAAQ,CAAC,YAAY,CAAC,UAAU,OAAO,EAAE,IAAI,EAAE;AAC3C,aAAQ;AACR,QAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;AACxD,QAAI,IAAI,GAAG,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;AAE3C,WAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,WAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;;AAExC,WAAO,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACvC,WAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACpC,WAAO,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACnC,WAAO,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACjC,WAAO,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,WAAO,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;;AAE/B,WAAO,IAAI,CAAC;CACf,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AACf,UAAM,EAAE,UAAU,GAAG,EAAE,IAAI,EAAE;AACzB,eAAO,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;KAC3B;AACD,UAAM,EAAE,UAAU,GAAG,EAAE,IAAI,EAAE;AACzB,eAAO,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;KAC3B;AACD,UAAM,EAAE,UAAU,GAAG,EAAE,IAAI,EAAE;AACzB,eAAO,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;KAC3B;CACJ,CAAC,CAAC;;AAEH,SAAS,eAAe,CAAC,QAAQ,EAAE,IAAI,EAAE;;AAErC,QAAI,IAAI,GAAG,EAAE;QACT,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;AAEnC,YAAQ,QAAQ;AACZ,aAAK,UAAU;AACX,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,uBAAO,EAAE,4BAA4B,GAAG,IAAI,CAAC,EAAE,GAAG,sBAAsB;AACxE,oBAAI,EAAE,IAAI,CAAC,IAAI;aAClB,CAAC;AACF,kBAAM;AAAA,AACV,aAAK,QAAQ;AACT,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,uBAAO,EAAE,EAAE;AACX,oBAAI,EAAE,EAAE;aACX,CAAC;AACF,kBAAM;AAAA,AACV,aAAK,QAAQ;AACT,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,uBAAO,EAAE,EAAE;AACX,oBAAI,EAAE,EAAE;aACX,CAAC;AACF,kBAAM;AAAA,AACV,aAAK,SAAS;AACV,gBAAI,GAAG;AACH,qBAAK,EAAE,IAAI,CAAC,UAAU;AACtB,uBAAO,EAAE,EAAE;AACX,oBAAI,EAAE,EAAE;aACX,CAAC;AACF,kBAAM;AAAA,AACV;AACI,gBAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;AACnC,gBAAI,GAAG;AACH,qBAAK,EAAE,KAAK;AACZ,uBAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC;aACxC,CAAC;AACF,kBAAM;AAAA,KACb;;AAED,WAAO,IAAI,CAAC;CACf","file":"/server/accounts.js.map","sourcesContent":["Accounts.onCreateUser(function (options, user) {\n    debugger\n    var provider = Object.keys(user.services).shift() || '';\n    var auth = getProviderInfo(provider, user);\n\n    options = options || {};\n    options.profile = options.profile || {};\n\n    options.profile.picture = auth.picture;\n    options.profile.provider = provider;\n    options.profile.email = auth.email;\n    options.profile.link = auth.link;\n    options.profile.createdAt = user.createdAt;\n    options.profile.updatedAt = user.createdAt;\n    user.profile = options.profile;\n    \n    return user;\n});\n\nMeteor.users.allow({\n    insert: function (_id, user) {\n        return _id === user._id;\n    },\n    update: function (_id, user) {\n        return _id === user._id;\n    },\n    remove: function (_id, user) {\n        return _id === user._id;\n    }\n});\n\nfunction getProviderInfo(provider, user) {\n\n    var opts = {},\n        info = user.services[provider];\n\n    switch (provider) {\n        case 'facebook':\n            opts = {\n                email: info.email,\n                picture: 'http://graph.facebook.com/' + info.id + '/picture/?type=small',\n                link: info.link\n            };\n            break;\n        case 'github':\n            opts = {\n                email: info.email,\n                picture: '',\n                link: ''\n            };\n            break;\n        case 'google':\n            opts = {\n                email: info.email,\n                picture: '',\n                link: ''\n            };\n            break;\n        case 'twitter':\n            opts = {\n                email: info.screenName,\n                picture: '',\n                link: ''\n            };\n            break;\n        default:\n            var email = user.emails[0].address;\n            opts = {\n                email: email,\n                picture: Gravatar.imageUrl(email, {})\n            };\n            break;\n    }\n\n    return opts;\n}\n"]},"hash":"6cb55faeaaddf0162d8d4e0c13a56f3ce7a793ea"}
