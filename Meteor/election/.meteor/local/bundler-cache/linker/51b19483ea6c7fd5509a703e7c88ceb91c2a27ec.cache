[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar Internals, ServerMessages, publishMethods, ChannelListener;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// packages/gfk_server-messages/packages/gfk_server-messages.js                           //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\n(function () {                                                                            // 1\n                                                                                          // 2\n//////////////////////////////////////////////////////////////////////////////////////    // 3\n//                                                                                  //    // 4\n// packages/gfk:server-messages/shared/internals.js                                 //    // 5\n//                                                                                  //    // 6\n//////////////////////////////////////////////////////////////////////////////////////    // 7\n                                                                                    //    // 8\n/* global Internals:true*/                                                          // 1  // 9\n                                                                                    // 2  // 10\n/***                                                                                // 3  // 11\n * Internal namespace used for constants and collection instance                    // 4  // 12\n *                                                                                  // 5  // 13\n * @namespace                                                                       // 6  // 14\n * @type {{constants: {MAX_TIMESTAMP_AGE: number}, collection: Mongo.Collection}}   // 7  // 15\n */                                                                                 // 8  // 16\nInternals = {                                                                       // 9  // 17\n  constants: {                                                                      // 10\n    MAX_TIMESTAMP_AGE: 2500                                                         // 11\n  },                                                                                // 12\n  collection: new Mongo.Collection('servermessages')                                // 13\n};                                                                                  // 14\n                                                                                    // 15\n//////////////////////////////////////////////////////////////////////////////////////    // 24\n                                                                                          // 25\n}).call(this);                                                                            // 26\n                                                                                          // 27\n                                                                                          // 28\n                                                                                          // 29\n                                                                                          // 30\n                                                                                          // 31\n                                                                                          // 32\n(function () {                                                                            // 33\n                                                                                          // 34\n//////////////////////////////////////////////////////////////////////////////////////    // 35\n//                                                                                  //    // 36\n// packages/gfk:server-messages/shared/serverMessages.js                            //    // 37\n//                                                                                  //    // 38\n//////////////////////////////////////////////////////////////////////////////////////    // 39\n                                                                                    //    // 40\nServerMessages = function (name) {                                                  // 1  // 41\n  this._name = name || 'default';                                                   // 2  // 42\n                                                                                    // 3  // 43\n  if (_.isFunction(this._init)) {                                                   // 4  // 44\n    //Client/server specific part of constructor                                    // 5  // 45\n    this._init.apply(this, arguments);                                              // 6  // 46\n  }                                                                                 // 7  // 47\n};                                                                                  // 8  // 48\n                                                                                    // 9  // 49\nServerMessages.prototype = {};                                                      // 10\n                                                                                    // 11\n//////////////////////////////////////////////////////////////////////////////////////    // 52\n                                                                                          // 53\n}).call(this);                                                                            // 54\n                                                                                          // 55\n                                                                                          // 56\n                                                                                          // 57\n                                                                                          // 58\n                                                                                          // 59\n                                                                                          // 60\n(function () {                                                                            // 61\n                                                                                          // 62\n//////////////////////////////////////////////////////////////////////////////////////    // 63\n//                                                                                  //    // 64\n// packages/gfk:server-messages/server/serverMessages.js                            //    // 65\n//                                                                                  //    // 66\n//////////////////////////////////////////////////////////////////////////////////////    // 67\n                                                                                    //    // 68\n_.extend(ServerMessages.prototype, {                                                // 1  // 69\n  /***                                                                              // 2  // 70\n   * Notifies the listeners of the given channel.                                   // 3  // 71\n   * All other arguments are passed on to the listeners                             // 4  // 72\n   *                                                                                // 5  // 73\n   * @param channel the channel to notify                                           // 6  // 74\n   */                                                                               // 7  // 75\n  notify: function (channel) {                                                      // 8  // 76\n    var args = [].slice.call(arguments);                                            // 9  // 77\n    args.splice(0, 1);                                                              // 10\n                                                                                    // 11\n    this._cleanupOldMessages();                                                     // 12\n                                                                                    // 13\n    Internals.collection.insert({                                                   // 14\n      instanceName: this._name,                                                     // 15\n      channel: channel,                                                             // 16\n      arguments: args,                                                              // 17\n      timestamp: (new Date().getTime())                                             // 18\n    });                                                                             // 19\n  },                                                                                // 20\n  /***                                                                              // 21\n   * Cleans up old messages that are expired                                        // 22\n   * @private                                                                       // 23\n   */                                                                               // 24\n  _cleanupOldMessages: function () {                                                // 25\n    var timestamp = (new Date().getTime()) - Internals.constants.MAX_TIMESTAMP_AGE; // 26\n                                                                                    // 27\n    Internals.collection.remove({                                                   // 28\n      timestamp: {$lt: timestamp}                                                   // 29\n    });                                                                             // 30\n  }                                                                                 // 31\n});                                                                                 // 32\n                                                                                    // 33\n//////////////////////////////////////////////////////////////////////////////////////    // 102\n                                                                                          // 103\n}).call(this);                                                                            // 104\n                                                                                          // 105\n                                                                                          // 106\n                                                                                          // 107\n                                                                                          // 108\n                                                                                          // 109\n                                                                                          // 110\n(function () {                                                                            // 111\n                                                                                          // 112\n//////////////////////////////////////////////////////////////////////////////////////    // 113\n//                                                                                  //    // 114\n// packages/gfk:server-messages/server/publish.js                                   //    // 115\n//                                                                                  //    // 116\n//////////////////////////////////////////////////////////////////////////////////////    // 117\n                                                                                    //    // 118\n/* global publishMethods:true*/                                                     // 1  // 119\n                                                                                    // 2  // 120\n                                                                                    // 3  // 121\n/***                                                                                // 4  // 122\n * Namespace containing the publishes for the package.                              // 5  // 123\n * Only exposed for testing purposes                                                // 6  // 124\n *                                                                                  // 7  // 125\n * @type {{ServerMessages/publishMessages: Function}}                               // 8  // 126\n */                                                                                 // 9  // 127\npublishMethods = {                                                                  // 10\n  /***                                                                              // 11\n   * Publishes all the messages for the given instanceName                          // 12\n   *                                                                                // 13\n   * @param instanceName the name of the instance to publish the messages for       // 14\n   * @returns {any|Cursor}                                                          // 15\n   */                                                                               // 16\n  'ServerMessages/publishMessages': function (instanceName) {                       // 17\n    var timestamp = (new Date().getTime()) - Internals.constants.MAX_TIMESTAMP_AGE; // 18\n                                                                                    // 19\n    return Internals.collection.find({                                              // 20\n      instanceName: instanceName,                                                   // 21\n      timestamp: {$gt: timestamp}                                                   // 22\n    });                                                                             // 23\n  }                                                                                 // 24\n};                                                                                  // 25\n                                                                                    // 26\n_.each(publishMethods, function (fn, name) {                                        // 27\n  Meteor.publish(name, fn);                                                         // 28\n});                                                                                 // 29\n                                                                                    // 30\n                                                                                    // 31\n//////////////////////////////////////////////////////////////////////////////////////    // 150\n                                                                                          // 151\n}).call(this);                                                                            // 152\n                                                                                          // 153\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['gfk:server-messages'] = {\n  ServerMessages: ServerMessages,\n  ChannelListener: ChannelListener,\n  Internals: Internals,\n  publishMethods: publishMethods\n};\n\n})();\n","servePath":"/packages/gfk_server-messages.js","sourceMap":{"version":3,"sources":["/packages/gfk_server-messages/packages/gfk_server-messages.js"],"names":[],"mappingsgG","file":"/packages/gfk_server-messages.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/gfk:server-messages/shared/internals.js                                 //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n/* global Internals:true*/                                                          // 1\n                                                                                    // 2\n/***                                                                                // 3\n * Internal namespace used for constants and collection instance                    // 4\n *                                                                                  // 5\n * @namespace                                                                       // 6\n * @type {{constants: {MAX_TIMESTAMP_AGE: number}, collection: Mongo.Collection}}   // 7\n */                                                                                 // 8\nInternals = {                                                                       // 9\n  constants: {                                                                      // 10\n    MAX_TIMESTAMP_AGE: 2500                                                         // 11\n  },                                                                                // 12\n  collection: new Mongo.Collection('servermessages')                                // 13\n};                                                                                  // 14\n                                                                                    // 15\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/gfk:server-messages/shared/serverMessages.js                            //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nServerMessages = function (name) {                                                  // 1\n  this._name = name || 'default';                                                   // 2\n                                                                                    // 3\n  if (_.isFunction(this._init)) {                                                   // 4\n    //Client/server specific part of constructor                                    // 5\n    this._init.apply(this, arguments);                                              // 6\n  }                                                                                 // 7\n};                                                                                  // 8\n                                                                                    // 9\nServerMessages.prototype = {};                                                      // 10\n                                                                                    // 11\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/gfk:server-messages/server/serverMessages.js                            //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n_.extend(ServerMessages.prototype, {                                                // 1\n  /***                                                                              // 2\n   * Notifies the listeners of the given channel.                                   // 3\n   * All other arguments are passed on to the listeners                             // 4\n   *                                                                                // 5\n   * @param channel the channel to notify                                           // 6\n   */                                                                               // 7\n  notify: function (channel) {                                                      // 8\n    var args = [].slice.call(arguments);                                            // 9\n    args.splice(0, 1);                                                              // 10\n                                                                                    // 11\n    this._cleanupOldMessages();                                                     // 12\n                                                                                    // 13\n    Internals.collection.insert({                                                   // 14\n      instanceName: this._name,                                                     // 15\n      channel: channel,                                                             // 16\n      arguments: args,                                                              // 17\n      timestamp: (new Date().getTime())                                             // 18\n    });                                                                             // 19\n  },                                                                                // 20\n  /***                                                                              // 21\n   * Cleans up old messages that are expired                                        // 22\n   * @private                                                                       // 23\n   */                                                                               // 24\n  _cleanupOldMessages: function () {                                                // 25\n    var timestamp = (new Date().getTime()) - Internals.constants.MAX_TIMESTAMP_AGE; // 26\n                                                                                    // 27\n    Internals.collection.remove({                                                   // 28\n      timestamp: {$lt: timestamp}                                                   // 29\n    });                                                                             // 30\n  }                                                                                 // 31\n});                                                                                 // 32\n                                                                                    // 33\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/gfk:server-messages/server/publish.js                                   //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n/* global publishMethods:true*/                                                     // 1\n                                                                                    // 2\n                                                                                    // 3\n/***                                                                                // 4\n * Namespace containing the publishes for the package.                              // 5\n * Only exposed for testing purposes                                                // 6\n *                                                                                  // 7\n * @type {{ServerMessages/publishMessages: Function}}                               // 8\n */                                                                                 // 9\npublishMethods = {                                                                  // 10\n  /***                                                                              // 11\n   * Publishes all the messages for the given instanceName                          // 12\n   *                                                                                // 13\n   * @param instanceName the name of the instance to publish the messages for       // 14\n   * @returns {any|Cursor}                                                          // 15\n   */                                                                               // 16\n  'ServerMessages/publishMessages': function (instanceName) {                       // 17\n    var timestamp = (new Date().getTime()) - Internals.constants.MAX_TIMESTAMP_AGE; // 18\n                                                                                    // 19\n    return Internals.collection.find({                                              // 20\n      instanceName: instanceName,                                                   // 21\n      timestamp: {$gt: timestamp}                                                   // 22\n    });                                                                             // 23\n  }                                                                                 // 24\n};                                                                                  // 25\n                                                                                    // 26\n_.each(publishMethods, function (fn, name) {                                        // 27\n  Meteor.publish(name, fn);                                                         // 28\n});                                                                                 // 29\n                                                                                    // 30\n                                                                                    // 31\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]