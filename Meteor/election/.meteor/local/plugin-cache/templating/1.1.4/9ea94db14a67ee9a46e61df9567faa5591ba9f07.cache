{"head":"","body":"","js":"\nTemplate.__checkName(\"notification\");\nTemplate[\"notification\"] = new Template(\"Template.notification\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": function() {\n      return [ \"notification \", Spacebars.mustache(view.lookup(\"notificationColor\"), view.lookup(\"type\")), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"userCloseable\"));\n      }, function() {\n        return \"closeable\";\n      }) ];\n    }\n  }, \"\\n         \", HTML.DIV({\n    \"class\": \"title\"\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"title\")));\n  })), \"\\n         \", HTML.DIV({\n    \"class\": \"message\"\n  }, Blaze.View(\"lookup:message\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"message\")));\n  })), \"\\n         \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"userCloseable\"));\n  }, function() {\n    return [ \"\\n                 \", HTML.DIV({\n      \"class\": \"closeButton\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"Ã—\"\n    })), \"\\n         \" ];\n  }), \"\\n     \");\n}));\n","bodyAttrs":{}}