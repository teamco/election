{"version":3,"sources":["meteor://ðŸ’»app/packages/twitter/twitter_server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4G","file":"/packages/twitter.js","sourcesContent":["Twitter = {};\n\nvar urls = {\n  requestToken: \"https://api.twitter.com/oauth/request_token\",\n  authorize: \"https://api.twitter.com/oauth/authorize\",\n  accessToken: \"https://api.twitter.com/oauth/access_token\",\n  authenticate: \"https://api.twitter.com/oauth/authenticate\"\n};\n\n\n// https://dev.twitter.com/docs/api/1.1/get/account/verify_credentials\nTwitter.whitelistedFields = ['profile_image_url', 'profile_image_url_https', 'lang'];\n\nOAuth.registerService('twitter', 1, urls, function(oauthBinding) {\n  var identity = oauthBinding.get('https://api.twitter.com/1.1/account/verify_credentials.json').data;\n\n  var serviceData = {\n    id: identity.id_str,\n    screenName: identity.screen_name,\n    accessToken: OAuth.sealSecret(oauthBinding.accessToken),\n    accessTokenSecret: OAuth.sealSecret(oauthBinding.accessTokenSecret)\n  };\n\n  // include helpful fields from twitter\n  var fields = _.pick(identity, Twitter.whitelistedFields);\n  _.extend(serviceData, fields);\n\n  return {\n    serviceData: serviceData,\n    options: {\n      profile: {\n        name: identity.name\n      }\n    }\n  };\n});\n\n\nTwitter.retrieveCredential = function(credentialToken, credentialSecret) {\n  return OAuth.retrieveCredential(credentialToken, credentialSecret);\n};\n"]}