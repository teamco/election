{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"CalEvent = new Mongo.Collection('calevent');\nif (Meteor.isClient) {\n\n  Template.dialog.events({\n    \"click .closeDialog\": function (event, template) {\n      Session.set('editing_event', null);\n    },\n    'click .updateTitle': function (evt, tmpl) {\n      var title = tmpl.find('#title').value;\n      Meteor.call('updateTitle', Session.get('editing_event'), title);\n      Session.set('editing_event', null);\n    }\n  });\n  Template.calendar.helpers({\n    editing_event: function () {\n      return Session.get('editing_event');\n    }\n  });\n  Template.dialog.helpers({\n    title: function () {\n      var ce = CalEvent.findOne({ _id: Session.get('editing_event') });\n      return ce.title;\n    }\n  });\n  Template.dialog.rendered = function () {\n    if (Session.get('editDialog')) {\n      var calevent = CalEvent.findOne({ _id: Session.get('editing_event') });\n      if (calevent) {\n        $('#title').val(calevent.title);\n      }\n    }\n  };\n  Template.calendar.rendered = function () {\n    var calendar = $('#calendar').fullCalendar({\n      dayClick: function (date, allDay, jsEvent, view) {\n        var calendarEvent = {};\n        calendarEvent.start = date;\n        calendarEvent.end = date;\n        calendarEvent.title = 'New Event';\n        calendarEvent.owner = Meteor.userId();\n        Meteor.call('saveCalEvent', calendarEvent);\n      },\n      eventClick: function (calEvent, jsEvent, view) {\n        Session.set('editing_event', calEvent._id);\n        $('#title').val(calEvent.title);\n      },\n      eventDrop: function (reqEvent) {\n        Meteor.call('moveEvent', reqEvent);\n      },\n      events: function (start, end, callback) {\n        var calEvents = CalEvent.find({}, { reactive: false }).fetch();\n        callback(calEvents);\n      },\n      editable: true,\n      selectable: true\n    }).data().fullCalendar;\n    Deps.autorun(function () {\n      CalEvent.find().fetch();\n      if (calendar) {\n        calendar.refetchEvents();\n      }\n    });\n  };\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    Meteor.methods({\n      'saveCalEvent': function (ce) {\n        CalEvent.insert(ce);\n      },\n      'updateTitle': function (id, title) {\n        return CalEvent.update({ _id: id }, { $set: { title: title } });\n      },\n      'moveEvent': function (reqEvent) {\n        return CalEvent.update({ _id: reqEvent._id }, {\n          $set: {\n            start: reqEvent.start,\n            end: reqEvent.end\n          }\n        });\n      }\n    });\n  });\n}","ast":null,"map":{"version":3,"sources":["/client/templates/calendar/calendar.js"],"names":[],"mappings":"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","file":"/client/templates/calendar/calendar.js.map","sourcesContent":["CalEvent = new Mongo.Collection('calevent');\nif (Meteor.isClient) {\n\nTemplate.dialog.events({\n  \"click .closeDialog\": function(event, template){\n    Session.set('editing_event',null);\n  },\n  'click .updateTitle':function(evt,tmpl){\n    var title = tmpl.find('#title').value;\n    Meteor.call('updateTitle',Session.get('editing_event'),title);\n    Session.set('editing_event',null);\n  }\n});\nTemplate.calendar.helpers({\n  editing_event: function(){\n    return Session.get('editing_event');\n  }\n});\nTemplate.dialog.helpers({\n  title: function(){\n    var ce = CalEvent.findOne({_id:Session.get('editing_event')});\n    return ce.title;\n  }\n});\nTemplate.dialog.rendered = function(){\n  if(Session.get('editDialog')){\n    var calevent = CalEvent.findOne({_id:Session.get('editing_event')});\n    if(calevent){\n      $('#title').val(calevent.title);\n    }\n  }\n}\n  Template.calendar.rendered = function(){\n    var calendar = $('#calendar').fullCalendar({\n        dayClick:function(date,allDay,jsEvent,view){\n          var calendarEvent = {};\n          calendarEvent.start = date;\n          calendarEvent.end = date;\n          calendarEvent.title = 'New Event';\n          calendarEvent.owner = Meteor.userId();\n          Meteor.call('saveCalEvent',calendarEvent);\n        },\n        eventClick:function(calEvent,jsEvent,view){\n          Session.set('editing_event',calEvent._id);\n          $('#title').val(calEvent.title);\n        },\n        eventDrop:function(reqEvent){\n          Meteor.call('moveEvent',reqEvent);\n        },\n        events:function(start,end,callback){\n          var calEvents = CalEvent.find({},{reactive:false}).fetch();\n          callback(calEvents);\n        },\n        editable:true,\n        selectable:true\n    }).data().fullCalendar;\n    Deps.autorun(function(){\n      CalEvent.find().fetch();\n      if(calendar){\n        calendar.refetchEvents();\n      }\n    })\n  }\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    Meteor.methods({\n      'saveCalEvent':function(ce){\n        CalEvent.insert(ce);\n      },\n      'updateTitle':function(id,title){\n        return CalEvent.update({_id:id},{$set:{title:title}});\n      },\n      'moveEvent':function(reqEvent){\n        return CalEvent.update({_id:reqEvent._id},{\n          $set:{\n            start:reqEvent.start,\n            end:reqEvent.end\n          }\n        })\n      }\n    })\n  });\n}"]},"hash":"0f6d32c99a4fabd2952039cab2fd02fe733c2882"}
