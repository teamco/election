{"version":3,"sources":["meteor://ðŸ’»app/packages/cunneen_delete-link/template.delete-button.js","meteor://ðŸ’»app/packages/cunneen_delete-link/delete-button.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0F","file":"/packages/cunneen_delete-link.js","sourcesContent":["\nTemplate.__checkName(\"quickRemoveLink\");\nTemplate[\"quickRemoveLink\"] = new Template(\"Template.quickRemoveLink\", (function() {\n  var view = this;\n  return HTML.A(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), Blaze.If(function() {\n    return Spacebars.call(view.templateContentBlock);\n  }, function() {\n    return Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    });\n  }, function() {\n    return \"Delete\";\n  }));\n}));\n","Template.quickRemoveLink.helpers({\n  atts: function () {\n    var context = this, atts = {};\n    for (var prop in context) {\n      if (context.hasOwnProperty(prop) &&\n          prop !== \"_id\" &&\n          prop !== \"collection\" &&\n          prop !== \"onError\" &&\n          prop !== \"onSuccess\" &&\n          prop !== \"beforeRemove\") {\n        atts[prop] = context[prop];\n      }\n    }\n    \n    return atts;\n  }\n});\n\nTemplate.quickRemoveLink.events({\n  'click a': function (event, template) {\n    var self = this;\n    var collection = lookup(self.collection);\n    if (typeof Meteor !== \"undefined\" && Meteor.Collection) {\n      if (!(collection instanceof Meteor.Collection)) {\n        throw new Error(\"quickRemoveLink: collection attribute must be set to a Meteor.Collection instance or a string reference to a Meteor.Collection instance that is in the window scope.\");\n      }\n    } else if (typeof Mongo !== \"undefined\" && Mongo.Collection) {\n      if (!(collection instanceof Mongo.Collection)) {\n        throw new Error(\"quickRemoveLink: collection attribute must be set to a Mongo.Collection instance or a string reference to a Mongo.Collection instance that is in the window scope.\");\n      }\n    }\n    var onError = self.onError || function (error) {\n      alert(\"Delete failed\");\n      console.log(error);\n    };\n    var onSuccess = self.onSuccess || function () {};\n    var beforeRemove = self.beforeRemove || function () { this.remove(); };\n    beforeRemove.call({\n      remove: function () {\n        collection.remove(self._id, function (error, result) {\n          if (error) {\n            onError(error);\n          } else {\n            onSuccess(result);\n          }\n        });\n      }\n    }, collection, self._id);\n  }\n});\n\nfunction lookup(obj) {\n  var ref = window, arr;\n  if (typeof obj === \"string\") {\n    arr = obj.split(\".\");\n    while(arr.length && (ref = ref[arr.shift()]));\n    if (!ref) {\n      throw new Error(obj + \" is not in the window scope\");\n    }\n    return ref;\n  }\n  return obj;\n}\n"]}