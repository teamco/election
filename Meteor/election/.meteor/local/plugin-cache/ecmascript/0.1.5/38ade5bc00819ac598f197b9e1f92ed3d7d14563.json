{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Meteor.subscribe(\"userData\");\n\nif (Meteor.isClient) {\n\n    Template.userData.events({\n        \"click button[rel='editUser']\": function (event, template) {\n            Router.render('/users/' + this._id);\n        }\n    });\n\n    // This code only runs on the client\n    Template.userData.helpers({\n        allUsers: function () {\n            return Accounts.users.find().fetch();\n        },\n        isCurrentUser: isCurrentUser,\n        onError: function () {\n            return function (error) {\n                Meteor.call('notify', 'serverMessage:error', 'Error', error, {\n                    timeout: 1000\n                });\n            };\n        },\n        onSuccess: function () {\n            return function (result) {\n                Meteor.call('notify', 'serverMessage:success', 'Success', result, {\n                    timeout: 1000\n                });\n            };\n        },\n        beforeRemove: function () {\n            return function (collection, _id) {\n                var user = collection.findOne(_id),\n                    name = user.profile.name,\n                    message = 'Really remove user: ' + name + '?';\n\n                if (confirm(message)) {\n                    this.remove();\n                    if (isCurrentUser(_id)) {\n                        //Meteor.logout();\n                    }\n                }\n            };\n        }\n    });\n}\n\nfunction isCurrentUser(_id) {\n    return _id === Meteor.userId();\n}\n\nRouter.route('/users', function () {\n\n    this.render('userData');\n}, { name: 'users' });\n\nRouter.route('/users/:id', function () {\n\n    $('#editUserModal').modal();\n}, { name: 'showUser' });","ast":null,"map":{"version":3,"sources":["/client/templates/users/users.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;AAE7B,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEjB,YAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;AACrB,sCAA8B,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE;AACvD,kBAAM,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;SACvC;KACJ,CAAC,CAAC;;;AAGH,YAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;AACtB,gBAAQ,EAAE,YAAY;AAClB,mBAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;SACxC;AACD,qBAAa,EAAE,aAAa;AAC5B,eAAO,EAAE,YAAY;AACjB,mBAAO,UAAU,KAAK,EAAE;AACpB,sBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,qBAAqB,EAAE,OAAO,EAAE,KAAK,EAAE;AACzD,2BAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;aACN,CAAC;SACL;AACD,iBAAS,EAAE,YAAY;AACnB,mBAAO,UAAU,MAAM,EAAE;AACrB,sBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM,EAAE;AAC9D,2BAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;aACN,CAAC;SACL;AACD,oBAAY,EAAE,YAAY;AACtB,mBAAO,UAAU,UAAU,EAAE,GAAG,EAAE;AAC9B,oBAAI,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC;oBAC9B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;oBACxB,OAAO,GAAG,sBAAsB,GAAG,IAAI,GAAG,GAAG,CAAC;;AAElD,oBAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,wBAAI,CAAC,MAAM,EAAE,CAAC;AACd,wBAAI,aAAa,CAAC,GAAG,CAAC,EAAE;;qBAEvB;iBACJ;aACJ,CAAC;SACL;KACJ,CAAC,CAAC;CACN;;AAED,SAAS,aAAa,CAAC,GAAG,EAAE;AACxB,WAAO,GAAG,KAAK,MAAM,CAAC,MAAM,EAAE,CAAC;CAClC;;AAED,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY;;AAE/B,QAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;CAE3B,EAAE,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;;AAEpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,YAAY;;AAEnC,KAAC,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,CAAC;CAE/B,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC","file":"/client/templates/users/users.js.map","sourcesContent":["Meteor.subscribe(\"userData\");\n\nif (Meteor.isClient) {\n\n    Template.userData.events({\n        \"click button[rel='editUser']\": function (event, template) {\n            Router.render('/users/' + this._id);\n        }\n    });\n\n    // This code only runs on the client\n    Template.userData.helpers({\n        allUsers: function () {\n            return Accounts.users.find().fetch();\n        },\n        isCurrentUser: isCurrentUser,\n        onError: function () {\n            return function (error) {\n                Meteor.call('notify', 'serverMessage:error', 'Error', error, {\n                    timeout: 1000\n                });\n            };\n        },\n        onSuccess: function () {\n            return function (result) {\n                Meteor.call('notify', 'serverMessage:success', 'Success', result, {\n                    timeout: 1000\n                });\n            };\n        },\n        beforeRemove: function () {\n            return function (collection, _id) {\n                var user = collection.findOne(_id),\n                    name = user.profile.name,\n                    message = 'Really remove user: ' + name + '?';\n\n                if (confirm(message)) {\n                    this.remove();\n                    if (isCurrentUser(_id)) {\n                        //Meteor.logout();\n                    }\n                }\n            };\n        }\n    });\n}\n\nfunction isCurrentUser(_id) {\n    return _id === Meteor.userId();\n}\n\nRouter.route('/users', function () {\n\n    this.render('userData');\n\n}, {name: 'users'});\n\nRouter.route('/users/:id', function () {\n\n    $('#editUserModal').modal();\n\n}, {name: 'showUser'});"]},"hash":"38ade5bc00819ac598f197b9e1f92ed3d7d14563"}
