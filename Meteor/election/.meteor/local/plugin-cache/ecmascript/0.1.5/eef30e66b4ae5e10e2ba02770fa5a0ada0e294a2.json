{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"if (Meteor.isClient) {\n\n    Template.userData.events({\n        \"click button[rel='editUser']\": function (event, template) {\n            var nextUrl = '/users/' + this._id,\n                currentUrl = Router.current().originalUrl;\n\n            if (currentUrl.indexOf(nextUrl) > -1) {\n                return template.view.template.__helpers.get('showModal')(this._id);\n            }\n\n            Router.go(nextUrl);\n        }\n    });\n\n    // This code only runs on the client\n    Template.userData.helpers({\n        showModal: function (id) {\n            if (id) {\n                Meteor.defer(function () {\n                    $('#editUserModal').modal();\n                });\n            }\n        },\n        allUsers: function () {\n            return Accounts.users.find().fetch();\n        },\n        isCurrentUser: isCurrentUser,\n        onError: function () {\n            return function (error) {\n                Meteor.call('notify', 'serverMessage:error', 'Error', error, {\n                    timeout: 1000\n                });\n            };\n        },\n        onSuccess: function () {\n            return function (result) {\n                Meteor.call('notify', 'serverMessage:success', 'Success', result, {\n                    timeout: 1000\n                });\n            };\n        },\n        beforeRemove: function () {\n            return function (collection, _id) {\n                var user = collection.findOne(_id),\n                    name = user.profile.name,\n                    message = 'Really remove user: ' + name + '?';\n\n                if (confirm(message)) {\n                    this.remove();\n                    if (isCurrentUser(_id)) {\n                        //Meteor.logout();\n                    }\n                }\n            };\n        }\n    });\n}\n\nfunction isCurrentUser(_id) {\n    return _id === Meteor.userId();\n}","ast":null,"map":{"version":3,"sources":["/client/templates/users/users.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEjB,YAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;AACrB,sCAA8B,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE;AACvD,gBAAI,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG;gBAC9B,UAAU,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC;;AAE9C,gBAAI,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;AAClC,uBAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtE;;AAED,kBAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;SACtB;KACJ,CAAC,CAAC;;;AAGH,YAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;AACtB,iBAAS,EAAE,UAAU,EAAE,EAAE;AACrB,gBAAI,EAAE,EAAE;AACJ,sBAAM,CAAC,KAAK,CAAC,YAAY;AACrB,qBAAC,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,CAAC;iBAC/B,CAAC,CAAC;aACN;SACJ;AACD,gBAAQ,EAAE,YAAY;AAClB,mBAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;SACxC;AACD,qBAAa,EAAE,aAAa;AAC5B,eAAO,EAAE,YAAY;AACjB,mBAAO,UAAU,KAAK,EAAE;AACpB,sBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,qBAAqB,EAAE,OAAO,EAAE,KAAK,EAAE;AACzD,2BAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;aACN,CAAC;SACL;AACD,iBAAS,EAAE,YAAY;AACnB,mBAAO,UAAU,MAAM,EAAE;AACrB,sBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM,EAAE;AAC9D,2BAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;aACN,CAAC;SACL;AACD,oBAAY,EAAE,YAAY;AACtB,mBAAO,UAAU,UAAU,EAAE,GAAG,EAAE;AAC9B,oBAAI,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC;oBAC9B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;oBACxB,OAAO,GAAG,sBAAsB,GAAG,IAAI,GAAG,GAAG,CAAC;;AAElD,oBAAI,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,wBAAI,CAAC,MAAM,EAAE,CAAC;AACd,wBAAI,aAAa,CAAC,GAAG,CAAC,EAAE;;qBAEvB;iBACJ;aACJ,CAAC;SACL;KACJ,CAAC,CAAC;CACN;;AAED,SAAS,aAAa,CAAC,GAAG,EAAE;AACxB,WAAO,GAAG,KAAK,MAAM,CAAC,MAAM,EAAE,CAAC;CAClC","file":"/client/templates/users/users.js.map","sourcesContent":["if (Meteor.isClient) {\n\n    Template.userData.events({\n        \"click button[rel='editUser']\": function (event, template) {\n            var nextUrl = '/users/' + this._id,\n                currentUrl = Router.current().originalUrl;\n\n            if (currentUrl.indexOf(nextUrl) > -1) {\n                return template.view.template.__helpers.get('showModal')(this._id);\n            }\n\n            Router.go(nextUrl);\n        }\n    });\n\n    // This code only runs on the client\n    Template.userData.helpers({\n        showModal: function (id) {\n            if (id) {\n                Meteor.defer(function () {\n                    $('#editUserModal').modal();\n                });\n            }\n        },\n        allUsers: function () {\n            return Accounts.users.find().fetch();\n        },\n        isCurrentUser: isCurrentUser,\n        onError: function () {\n            return function (error) {\n                Meteor.call('notify', 'serverMessage:error', 'Error', error, {\n                    timeout: 1000\n                });\n            };\n        },\n        onSuccess: function () {\n            return function (result) {\n                Meteor.call('notify', 'serverMessage:success', 'Success', result, {\n                    timeout: 1000\n                });\n            };\n        },\n        beforeRemove: function () {\n            return function (collection, _id) {\n                var user = collection.findOne(_id),\n                    name = user.profile.name,\n                    message = 'Really remove user: ' + name + '?';\n\n                if (confirm(message)) {\n                    this.remove();\n                    if (isCurrentUser(_id)) {\n                        //Meteor.logout();\n                    }\n                }\n            };\n        }\n    });\n}\n\nfunction isCurrentUser(_id) {\n    return _id === Meteor.userId();\n}"]},"hash":"eef30e66b4ae5e10e2ba02770fa5a0ada0e294a2"}
