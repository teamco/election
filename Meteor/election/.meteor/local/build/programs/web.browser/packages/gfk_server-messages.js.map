{"version":3,"sources":["meteor://ðŸ’»app/packages/gfk_server-messages/packages/gfk_server-messages.js"],"names":[],"mappingsgH","file":"/packages/gfk_server-messages.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/gfk:server-messages/shared/internals.js                                                 //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n/* global Internals:true*/                                                                          // 1\n                                                                                                    // 2\n/***                                                                                                // 3\n * Internal namespace used for constants and collection instance                                    // 4\n *                                                                                                  // 5\n * @namespace                                                                                       // 6\n * @type {{constants: {MAX_TIMESTAMP_AGE: number}, collection: Mongo.Collection}}                   // 7\n */                                                                                                 // 8\nInternals = {                                                                                       // 9\n  constants: {                                                                                      // 10\n    MAX_TIMESTAMP_AGE: 2500                                                                         // 11\n  },                                                                                                // 12\n  collection: new Mongo.Collection('servermessages')                                                // 13\n};                                                                                                  // 14\n                                                                                                    // 15\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/gfk:server-messages/shared/serverMessages.js                                            //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nServerMessages = function (name) {                                                                  // 1\n  this._name = name || 'default';                                                                   // 2\n                                                                                                    // 3\n  if (_.isFunction(this._init)) {                                                                   // 4\n    //Client/server specific part of constructor                                                    // 5\n    this._init.apply(this, arguments);                                                              // 6\n  }                                                                                                 // 7\n};                                                                                                  // 8\n                                                                                                    // 9\nServerMessages.prototype = {};                                                                      // 10\n                                                                                                    // 11\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/gfk:server-messages/client/channelListener.js                                           //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n/* global ChannelListener:true*/                                                                    // 1\n                                                                                                    // 2\nChannelListener = function (channel, collection) {                                                  // 3\n  this.handlers = [];                                                                               // 4\n  this.channel = channel;                                                                           // 5\n                                                                                                    // 6\n  this._observe = collection.find({                                                                 // 7\n    channel: channel                                                                                // 8\n  }).observe({                                                                                      // 9\n    added: this._handleMessage.bind(this)                                                           // 10\n  });                                                                                               // 11\n};                                                                                                  // 12\n                                                                                                    // 13\nChannelListener.prototype.addHandler = function (handler) {                                         // 14\n  this.handlers.push(handler);                                                                      // 15\n};                                                                                                  // 16\n                                                                                                    // 17\nChannelListener.prototype.destroy = function () {                                                   // 18\n  this._observe.stop();                                                                             // 19\n};                                                                                                  // 20\n                                                                                                    // 21\nChannelListener.prototype._handleMessage = function (message) {                                     // 22\n  _.each(this.handlers, function (handler) {                                                        // 23\n    handler.apply(handler, message.arguments);                                                      // 24\n  });                                                                                               // 25\n};                                                                                                  // 26\n                                                                                                    // 27\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/gfk:server-messages/client/serverMessages.js                                            //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n_.extend(ServerMessages.prototype, {                                                                // 1\n  /***                                                                                              // 2\n   * Part of constructor that is server/client specific                                             // 3\n   * @private                                                                                       // 4\n   */                                                                                               // 5\n  _init: function () {                                                                              // 6\n    this._listeners = {};                                                                           // 7\n    this._subscription = Meteor.subscribe('ServerMessages/publishMessages', this._name);            // 8\n  },                                                                                                // 9\n  /***                                                                                              // 10\n   * Listen to a certain channel, execute the given handler when a message arrives                  // 11\n   *                                                                                                // 12\n   * @param channel the channel to listen to                                                        // 13\n   * @param handler the handler to execute upon a new message                                       // 14\n   */                                                                                               // 15\n  listen: function (channel, handler) {                                                             // 16\n    if (!this._listeners[channel]) {                                                                // 17\n      this._addChannelListener(channel);                                                            // 18\n    }                                                                                               // 19\n                                                                                                    // 20\n    this._listeners[channel].addHandler(handler);                                                   // 21\n  },                                                                                                // 22\n  /***                                                                                              // 23\n   * Instantiates a new ChannelListener for the given channel                                       // 24\n   * @param channel the channel to listen to                                                        // 25\n   * @private                                                                                       // 26\n   */                                                                                               // 27\n  _addChannelListener: function (channel) {                                                         // 28\n    this._listeners[channel] = new ChannelListener(                                                 // 29\n      channel,                                                                                      // 30\n      Internals.collection                                                                          // 31\n    );                                                                                              // 32\n  },                                                                                                // 33\n  /***                                                                                              // 34\n   * Cleans up current subscription and oberves on the collection.                                  // 35\n   * Call this before setting the reference to ServerMessages to undefined to prevent memory leaks. // 36\n   */                                                                                               // 37\n  destroy: function () {                                                                            // 38\n    _.invoke(this._listeners, 'destroy');                                                           // 39\n    this._subscription.stop();                                                                      // 40\n  }                                                                                                 // 41\n});                                                                                                 // 42\n                                                                                                    // 43\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}